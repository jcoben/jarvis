{"ast":null,"code":"import React, { useMemo, useState, useReducer, useCallback, useEffect, useRef, useContext, useLayoutEffect, forwardRef, useImperativeHandle, Children } from 'react';\nimport { createPortal } from 'react-dom';\nimport isDeepEqual from 'fast-deep-equal';\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nconst APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nclass GoogleMapsApiLoader {\n  /**\n   * Loads the Maps JavaScript API with the specified parameters.\n   * Since the Maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   */\n  static async load(params, onLoadingStatusChange) {\n    var _window$google;\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n    this.listeners.push(onLoadingStatusChange);\n    // Note: if `google.maps.importLibrary` has been defined externally, we\n    //   assume that loading is complete and successful.\n    //   If it was defined by a previous call to this method, a warning\n    //   message is logged if there are differences in api-parameters used\n    //   for both calls.\n    if ((_window$google = window.google) != null && (_window$google = _window$google.maps) != null && _window$google.importLibrary) {\n      // no serialized parameters means it was loaded externally\n      if (!this.serializedApiParams) {\n        this.loadingStatus = APILoadingStatus.LOADED;\n      }\n      this.notifyLoadingStatusListeners();\n    } else {\n      this.serializedApiParams = serializedParams;\n      this.initImportLibrary(params);\n    }\n    if (this.serializedApiParams && this.serializedApiParams !== serializedParams) {\n      console.warn(`[google-maps-api-loader] The maps API has already been loaded ` + `with different parameters and will not be loaded again. Refresh the ` + `page for new values to have effect.`);\n    }\n    const librariesToLoad = ['maps', ...libraries];\n    await Promise.all(librariesToLoad.map(name => google.maps.importLibrary(name)));\n  }\n  /**\n   * Serialize the paramters used to load the library for easier comparison.\n   */\n  static serializeParams(params) {\n    return [params.v, params.key, params.language, params.region, params.authReferrerPolicy, params.solutionChannel].join('/');\n  }\n  /**\n   * Creates the global `google.maps.importLibrary` function for bootstrapping.\n   * This is essentially a formatted version of the dynamic loading script\n   * from the official documentation with some minor adjustments.\n   *\n   * The created importLibrary function will load the Google Maps JavaScript API,\n   * which will then replace the `google.maps.importLibrary` function with the full\n   * implementation.\n   *\n   * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n   */\n  static initImportLibrary(params) {\n    if (!window.google) window.google = {};\n    if (!window.google.maps) window.google.maps = {};\n    if (window.google.maps['importLibrary']) {\n      console.error('[google-maps-api-loader-internal]: initImportLibrary must only be called once');\n      return;\n    }\n    let apiPromise = null;\n    const loadApi = () => {\n      if (apiPromise) return apiPromise;\n      apiPromise = new Promise((resolve, reject) => {\n        var _document$querySelect;\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(/[A-Z]/g, t => '_' + t[0].toLowerCase());\n          urlParams.set(urlParamName, String(value));\n        }\n        urlParams.set('loading', 'async');\n        urlParams.set('callback', '__googleMapsCallback__');\n        scriptElement.async = true;\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n        scriptElement.nonce = ((_document$querySelect = document.querySelector('script[nonce]')) == null ? void 0 : _document$querySelect.nonce) || '';\n        scriptElement.onerror = () => {\n          this.loadingStatus = APILoadingStatus.FAILED;\n          this.notifyLoadingStatusListeners();\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        };\n        window.__googleMapsCallback__ = () => {\n          this.loadingStatus = APILoadingStatus.LOADED;\n          this.notifyLoadingStatusListeners();\n          resolve();\n        };\n        window.gm_authFailure = () => {\n          this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n          this.notifyLoadingStatusListeners();\n        };\n        this.loadingStatus = APILoadingStatus.LOADING;\n        this.notifyLoadingStatusListeners();\n        document.head.append(scriptElement);\n      });\n      return apiPromise;\n    };\n    // for the first load, we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName => loadApi().then(() => google.maps.importLibrary(libraryName));\n  }\n  /**\n   * Calls all registered loadingStatusListeners after a status update.\n   */\n  static notifyLoadingStatusListeners() {\n    for (const fn of this.listeners) {\n      fn(this.loadingStatus);\n    }\n  }\n}\n/**\n * The current loadingStatus of the API.\n */\nGoogleMapsApiLoader.loadingStatus = APILoadingStatus.NOT_LOADED;\n/**\n * The parameters used for first loading the API.\n */\nGoogleMapsApiLoader.serializedApiParams = void 0;\n/**\n * A list of functions to be notified when the loading status changes.\n */\nGoogleMapsApiLoader.listeners = [];\nconst _excluded$3 = [\"onLoad\", \"onError\", \"apiKey\", \"version\", \"libraries\"],\n  _excluded2$1 = [\"children\"];\nconst DEFAULT_SOLUTION_CHANNEL = 'GMP_visgl_rgmlibrary_v1_default';\nconst APIProviderContext = React.createContext(null);\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState({});\n  const addMapInstance = (mapInstance, id = 'default') => {\n    setMapInstances(instances => _extends({}, instances, {\n      [id]: mapInstance\n    }));\n  };\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(_ref => {\n      let remaining = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n      return remaining;\n    });\n  };\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n  return {\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances\n  };\n}\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props) {\n  const {\n      onLoad,\n      onError,\n      apiKey,\n      version,\n      libraries = []\n    } = props,\n    otherApiParams = _objectWithoutPropertiesLoose(props, _excluded$3);\n  const [status, setStatus] = useState(GoogleMapsApiLoader.loadingStatus);\n  const [loadedLibraries, addLoadedLibrary] = useReducer((loadedLibraries, action) => {\n    return loadedLibraries[action.name] ? loadedLibraries : _extends({}, loadedLibraries, {\n      [action.name]: action.value\n    });\n  }, {});\n  const librariesString = useMemo(() => libraries == null ? void 0 : libraries.join(','), [libraries]);\n  const serializedParams = useMemo(() => JSON.stringify(_extends({\n    apiKey,\n    version\n  }, otherApiParams)), [apiKey, version, otherApiParams]);\n  const importLibrary = useCallback(async name => {\n    var _google;\n    if (loadedLibraries[name]) {\n      return loadedLibraries[name];\n    }\n    if (!((_google = google) != null && (_google = _google.maps) != null && _google.importLibrary)) {\n      throw new Error('[api-provider-internal] importLibrary was called before ' + 'google.maps.importLibrary was defined.');\n    }\n    const res = await window.google.maps.importLibrary(name);\n    addLoadedLibrary({\n      name,\n      value: res\n    });\n    return res;\n  }, [loadedLibraries]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const params = _extends({\n          key: apiKey\n        }, otherApiParams);\n        if (version) params.v = version;\n        if ((librariesString == null ? void 0 : librariesString.length) > 0) params.libraries = librariesString;\n        if (params.channel === undefined || params.channel < 0 || params.channel > 999) delete params.channel;\n        if (params.solutionChannel === undefined) params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;else if (params.solutionChannel === '') delete params.solutionChannel;\n        await GoogleMapsApiLoader.load(params, status => setStatus(status));\n        for (const name of ['core', 'maps', ...libraries]) {\n          await importLibrary(name);\n        }\n        if (onLoad) {\n          onLoad();\n        }\n      } catch (error) {\n        if (onError) {\n          onError(error);\n        } else {\n          console.error('<ApiProvider> failed to load the Google Maps JavaScript API', error);\n        }\n      }\n    })();\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [apiKey, librariesString, serializedParams]);\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nconst APIProvider = props => {\n  const {\n      children\n    } = props,\n    loaderProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n  const {\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances\n  } = useMapInstances();\n  const {\n    status,\n    loadedLibraries,\n    importLibrary\n  } = useGoogleMapsApiLoader(loaderProps);\n  const contextValue = useMemo(() => ({\n    mapInstances,\n    addMapInstance,\n    removeMapInstance,\n    clearMapInstances,\n    status,\n    loadedLibraries,\n    importLibrary\n  }), [mapInstances, addMapInstance, removeMapInstance, clearMapInstances, status, loadedLibraries, importLibrary]);\n  return /*#__PURE__*/React.createElement(APIProviderContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nfunction useMapEvents(map, props) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName];\n    const eventType = propNameToEventType[propName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n      const listener = google.maps.event.addListener(map, eventType, ev => {\n        handler(createMapEvent(eventType, map, ev));\n      });\n      return () => listener.remove();\n    }, [map, eventType, handler]);\n  }\n}\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(type, map, srcEvent) {\n  const ev = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev;\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn('[createEvent] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n    }\n    camEvent.detail = {\n      center: (center == null ? void 0 : center.toJSON()) || {\n        lat: 0,\n        lng: 0\n      },\n      zoom: zoom || 0,\n      heading: heading,\n      tilt: tilt,\n      bounds: (bounds == null ? void 0 : bounds.toJSON()) || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    var _srcEvent$latLng;\n    if (!srcEvent) throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev;\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n    mouseEvent.detail = {\n      latLng: ((_srcEvent$latLng = srcEvent.latLng) == null ? void 0 : _srcEvent$latLng.toJSON()) || null,\n      placeId: srcEvent.placeId\n    };\n    return mouseEvent;\n  }\n  return ev;\n}\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n};\nconst cameraEventTypes = ['bounds_changed', 'center_changed', 'heading_changed', 'tilt_changed', 'zoom_changed'];\nconst mouseEventTypes = ['click', 'contextmenu', 'dblclick', 'mousemove', 'mouseout', 'mouseover'];\nconst eventPropNames = Object.keys(propNameToEventType);\nfunction useDeepCompareEffect(effect, deps) {\n  const ref = useRef(undefined);\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\nconst mapOptionKeys = new Set(['backgroundColor', 'clickableIcons', 'controlSize', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor', 'draggingCursor', 'fullscreenControl', 'fullscreenControlOptions', 'gestureHandling', 'headingInteractionEnabled', 'isFractionalZoomEnabled', 'keyboardShortcuts', 'mapTypeControl', 'mapTypeControlOptions', 'mapTypeId', 'maxZoom', 'minZoom', 'noClear', 'panControl', 'panControlOptions', 'restriction', 'rotateControl', 'rotateControlOptions', 'scaleControl', 'scaleControlOptions', 'scrollwheel', 'streetView', 'streetViewControl', 'streetViewControlOptions', 'styles', 'tiltInteractionEnabled', 'zoomControl', 'zoomControlOptions']);\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nfunction useMapOptions(map, mapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n  const mapOptions = {};\n  const keys = Object.keys(mapProps);\n  for (const key of keys) {\n    if (!mapOptionKeys.has(key)) continue;\n    mapOptions[key] = mapProps[key];\n  }\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(() => {\n    if (!map) return;\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\nfunction useApiLoadingStatus() {\n  var _useContext;\n  return ((_useContext = useContext(APIProviderContext)) == null ? void 0 : _useContext.status) || APILoadingStatus.NOT_LOADED;\n}\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nfunction useDeckGLCameraUpdate(map, props) {\n  const {\n    viewport,\n    viewState\n  } = props;\n  const isDeckGlControlled = !!viewport;\n  useLayoutEffect(() => {\n    if (!map || !viewState) return;\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState;\n    map.moveCamera({\n      center: {\n        lat: latitude,\n        lng: longitude\n      },\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n  return isDeckGlControlled;\n}\nfunction isLatLngLiteral(obj) {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\nfunction latLngEquals(a, b) {\n  if (!a || !b) return false;\n  const A = toLatLngLiteral(a);\n  const B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\nfunction toLatLngLiteral(obj) {\n  if (isLatLngLiteral(obj)) return obj;\n  return obj.toJSON();\n}\nfunction useMapCameraParams(map, cameraStateRef, mapProps) {\n  const center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n  let lat = null;\n  let lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  const zoom = Number.isFinite(mapProps.zoom) ? mapProps.zoom : null;\n  const heading = Number.isFinite(mapProps.heading) ? mapProps.heading : null;\n  const tilt = Number.isFinite(mapProps.tilt) ? mapProps.tilt : null;\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n  useLayoutEffect(() => {\n    if (!map) return;\n    const nextCamera = {};\n    let needsUpdate = false;\n    if (lat !== null && lng !== null && (cameraStateRef.current.center.lat !== lat || cameraStateRef.current.center.lng !== lng)) {\n      nextCamera.center = {\n        lat,\n        lng\n      };\n      needsUpdate = true;\n    }\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom;\n      needsUpdate = true;\n    }\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading;\n      needsUpdate = true;\n    }\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt;\n      needsUpdate = true;\n    }\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\nconst AuthFailureMessage = () => {\n  const style = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"Error: AuthFailure\"), /*#__PURE__*/React.createElement(\"p\", null, \"A problem with your API key prevents the map from rendering correctly. Please make sure the value of the \", /*#__PURE__*/React.createElement(\"code\", null, \"APIProvider.apiKey\"), \" prop is correct. Check the error-message in the console for further details.\"));\n};\nfunction useCallbackRef() {\n  const [el, setEl] = useState(null);\n  const ref = useCallback(value => setEl(value), [setEl]);\n  return [el, ref];\n}\n\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nfunction useApiIsLoaded() {\n  const status = useApiLoadingStatus();\n  return status === APILoadingStatus.LOADED;\n}\nfunction useForceUpdate() {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\nfunction handleBoundsChange(map, ref) {\n  const center = map.getCenter();\n  const zoom = map.getZoom();\n  const heading = map.getHeading() || 0;\n  const tilt = map.getTilt() || 0;\n  const bounds = map.getBounds();\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn('[useTrackedCameraState] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n  }\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: (center == null ? void 0 : center.toJSON()) || {\n      lat: 0,\n      lng: 0\n    },\n    zoom: zoom || 0,\n    heading: heading,\n    tilt: tilt\n  });\n}\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nfunction useTrackedCameraStateRef(map) {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef({\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(() => {\n    if (!map) return;\n    const listener = google.maps.event.addListener(map, 'bounds_changed', () => {\n      handleBoundsChange(map, ref);\n      // When an event is occured, we have to update during the next cycle.\n      // The application could decide to ignore the event and not update any\n      // camera props of the map, meaning that in that case we will have to\n      // 'undo' the change to the camera.\n      forceUpdate();\n    });\n    return () => listener.remove();\n  }, [map, forceUpdate]);\n  return ref;\n}\nconst _excluded$2 = [\"id\", \"defaultBounds\", \"defaultCenter\", \"defaultZoom\", \"defaultHeading\", \"defaultTilt\", \"reuseMaps\", \"renderingType\", \"colorScheme\"],\n  _excluded2 = [\"padding\"];\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nclass CachedMapStack {\n  static has(key) {\n    return this.entries[key] && this.entries[key].length > 0;\n  }\n  static pop(key) {\n    if (!this.entries[key]) return null;\n    return this.entries[key].pop() || null;\n  }\n  static push(key, value) {\n    if (!this.entries[key]) this.entries[key] = [];\n    this.entries[key].push(value);\n  }\n}\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nCachedMapStack.entries = {};\nfunction useMapInstance(props, context) {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState(null);\n  const [container, containerRef] = useCallbackRef();\n  const cameraStateRef = useTrackedCameraStateRef(map);\n  const {\n      id,\n      defaultBounds,\n      defaultCenter,\n      defaultZoom,\n      defaultHeading,\n      defaultTilt,\n      reuseMaps,\n      renderingType,\n      colorScheme\n    } = props,\n    mapOptions = _objectWithoutPropertiesLoose(props, _excluded$2);\n  const hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  const hasCenter = props.center !== undefined || props.defaultCenter !== undefined;\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn('<Map> component is missing configuration. ' + 'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' + '`center`/`defaultCenter` props) or specify the region to show using ' + '`defaultBounds`. See ' + 'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required');\n  }\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom)) mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading)) mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt)) mapOptions.tilt = defaultTilt;\n  for (const key of Object.keys(mapOptions)) if (mapOptions[key] === undefined) delete mapOptions[key];\n  const savedMapStateRef = useRef();\n  // create the map instance and register it in the context\n  useEffect(() => {\n    if (!container || !apiIsLoaded) return;\n    const {\n      addMapInstance,\n      removeMapInstance\n    } = context;\n    // note: colorScheme (upcoming feature) isn't yet in the typings, remove once that is fixed:\n    const {\n      mapId\n    } = props;\n    const cacheKey = `${mapId || 'default'}:${renderingType || 'default'}:${colorScheme || 'LIGHT'}`;\n    let mapDiv;\n    let map;\n    if (reuseMaps && CachedMapStack.has(cacheKey)) {\n      map = CachedMapStack.pop(cacheKey);\n      mapDiv = map.getDiv();\n      container.appendChild(mapDiv);\n      map.setOptions(mapOptions);\n      // detaching the element from the DOM lets the map fall back to its default\n      // size, setting the center will trigger reloading the map.\n      setTimeout(() => map.setCenter(map.getCenter()), 0);\n    } else {\n      mapDiv = document.createElement('div');\n      mapDiv.style.height = '100%';\n      container.appendChild(mapDiv);\n      map = new google.maps.Map(mapDiv, _extends({}, mapOptions, renderingType ? {\n        renderingType: renderingType\n      } : {}, colorScheme ? {\n        colorScheme: colorScheme\n      } : {}));\n    }\n    setMap(map);\n    addMapInstance(map, id);\n    if (defaultBounds) {\n      const {\n          padding\n        } = defaultBounds,\n        defBounds = _objectWithoutPropertiesLoose(defaultBounds, _excluded2);\n      map.fitBounds(defBounds, padding);\n    }\n    // prevent map not rendering due to missing configuration\n    else if (!hasZoom || !hasCenter) {\n      map.fitBounds({\n        east: 180,\n        west: -180,\n        south: -90,\n        north: 90\n      });\n    }\n    // the savedMapState is used to restore the camera parameters when the mapId is changed\n    if (savedMapStateRef.current) {\n      const {\n        mapId: savedMapId,\n        cameraState: savedCameraState\n      } = savedMapStateRef.current;\n      if (savedMapId !== mapId) {\n        map.setOptions(savedCameraState);\n      }\n    }\n    return () => {\n      savedMapStateRef.current = {\n        mapId,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        cameraState: cameraStateRef.current\n      };\n      // detach the map-div from the dom\n      mapDiv.remove();\n      if (reuseMaps) {\n        // push back on the stack\n        CachedMapStack.push(cacheKey, map);\n      } else {\n        // remove all event-listeners to minimize the possibility of memory-leaks\n        google.maps.event.clearInstanceListeners(map);\n      }\n      setMap(null);\n      removeMapInstance(id);\n    };\n  },\n  // some dependencies are ignored in the list below:\n  //  - defaultBounds and the default* camera props will only be used once, and\n  //    changes should be ignored\n  //  - mapOptions has special hooks that take care of updating the options\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [container, apiIsLoaded, id,\n  // these props can't be changed after initialization and require a new\n  // instance to be created\n  props.mapId, props.renderingType, props.colorScheme]);\n  return [map, containerRef, cameraStateRef];\n}\nconst GoogleMapsContext = React.createContext(null);\n// ColorScheme and RenderingType are redefined here to make them usable before the\n// maps API has been fully loaded.\nconst ColorScheme = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n  FOLLOW_SYSTEM: 'FOLLOW_SYSTEM'\n};\nconst RenderingType = {\n  VECTOR: 'VECTOR',\n  RASTER: 'RASTER',\n  UNINITIALIZED: 'UNINITIALIZED'\n};\nconst Map = props => {\n  const {\n    children,\n    id,\n    className,\n    style\n  } = props;\n  const context = useContext(APIProviderContext);\n  const loadingStatus = useApiLoadingStatus();\n  if (!context) {\n    throw new Error('<Map> can only be used inside an <ApiProvider> component.');\n  }\n  const [map, mapRef, cameraStateRef] = useMapInstance(props, context);\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n  const isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  const isControlledExternally = !!props.controlled;\n  // disable interactions with the map for externally controlled maps\n  useEffect(() => {\n    if (!map) return;\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({\n        disableDefaultUI: true\n      });\n    }\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n    return () => {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [map, isDeckGlControlled, isControlledExternally, props.gestureHandling, props.keyboardShortcuts]);\n  // setup a stable cameraOptions object that can be used as dependency\n  const center = props.center ? toLatLngLiteral(props.center) : null;\n  let lat = null;\n  let lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  const cameraOptions = useMemo(() => {\n    var _lat, _lng, _props$zoom, _props$heading, _props$tilt;\n    return {\n      center: {\n        lat: (_lat = lat) != null ? _lat : 0,\n        lng: (_lng = lng) != null ? _lng : 0\n      },\n      zoom: (_props$zoom = props.zoom) != null ? _props$zoom : 0,\n      heading: (_props$heading = props.heading) != null ? _props$heading : 0,\n      tilt: (_props$tilt = props.tilt) != null ? _props$tilt : 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(() => {\n    if (!map || !isControlledExternally) return;\n    map.moveCamera(cameraOptions);\n    const listener = map.addListener('bounds_changed', () => {\n      map.moveCamera(cameraOptions);\n    });\n    return () => listener.remove();\n  }, [map, isControlledExternally, cameraOptions]);\n  const combinedStyle = useMemo(() => _extends({\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    // when using deckgl, the map should be sent to the back\n    zIndex: isDeckGlControlled ? -1 : 0\n  }, style), [style, isDeckGlControlled]);\n  const contextValue = useMemo(() => ({\n    map\n  }), [map]);\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: _extends({\n        position: 'relative'\n      }, className ? {} : combinedStyle),\n      className: className\n    }, /*#__PURE__*/React.createElement(AuthFailureMessage, null));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: mapRef,\n    \"data-testid\": 'map',\n    style: className ? undefined : combinedStyle,\n    className: className\n  }, id ? {\n    id\n  } : {}), map ? /*#__PURE__*/React.createElement(GoogleMapsContext.Provider, {\n    value: contextValue\n  }, children) : null);\n};\nMap.deckGLViewProps = true;\nconst shownMessages = new Set();\nfunction logErrorOnce(...args) {\n  const key = JSON.stringify(args);\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n    console.error(...args);\n  }\n}\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nconst useMap = (id = null) => {\n  const ctx = useContext(APIProviderContext);\n  const {\n    map\n  } = useContext(GoogleMapsContext) || {};\n  if (ctx === null) {\n    logErrorOnce('useMap(): failed to retrieve APIProviderContext. ' + 'Make sure that the <APIProvider> component exists and that the ' + 'component you are calling `useMap()` from is a sibling of the ' + '<APIProvider>.');\n    return null;\n  }\n  const {\n    mapInstances\n  } = ctx;\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n  // otherwise, return the closest ancestor\n  if (map) return map;\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\nfunction useMapsLibrary(name) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n  return (ctx == null ? void 0 : ctx.loadedLibraries[name]) || null;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nfunction useMapsEventListener(target, name, callback) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n    const listener = google.maps.event.addListener(target, name, callback);\n    return () => listener.remove();\n  }, [target, name, callback]);\n}\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nfunction usePropBinding(object, prop, value) {\n  useEffect(() => {\n    if (!object) return;\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Internally used to bind events to DOM nodes.\n * @internal\n */\nfunction useDomEventListener(target, name, callback) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n    target.addEventListener(name, callback);\n    return () => target.removeEventListener(name, callback);\n  }, [target, name, callback]);\n}\n\n/* eslint-disable complexity */\nfunction isAdvancedMarker(marker) {\n  return marker.content !== undefined;\n}\nfunction isElementNode(node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nconst CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n};\nconst AdvancedMarkerContext = React.createContext(null);\n// [xPosition, yPosition] when the top left corner is [0, 0]\nconst AdvancedMarkerAnchorPoint = {\n  TOP_LEFT: ['0%', '0%'],\n  TOP_CENTER: ['50%', '0%'],\n  TOP: ['50%', '0%'],\n  TOP_RIGHT: ['100%', '0%'],\n  LEFT_CENTER: ['0%', '50%'],\n  LEFT_TOP: ['0%', '0%'],\n  LEFT: ['0%', '50%'],\n  LEFT_BOTTOM: ['0%', '100%'],\n  RIGHT_TOP: ['100%', '0%'],\n  RIGHT: ['100%', '50%'],\n  RIGHT_CENTER: ['100%', '50%'],\n  RIGHT_BOTTOM: ['100%', '100%'],\n  BOTTOM_LEFT: ['0%', '100%'],\n  BOTTOM_CENTER: ['50%', '100%'],\n  BOTTOM: ['50%', '100%'],\n  BOTTOM_RIGHT: ['100%', '100%'],\n  CENTER: ['50%', '50%']\n};\nconst MarkerContent = ({\n  children,\n  styles,\n  className,\n  anchorPoint\n}) => {\n  const [xTranslation, yTranslation] = anchorPoint != null ? anchorPoint : AdvancedMarkerAnchorPoint['BOTTOM'];\n  // The \"translate(50%, 100%)\" is here to counter and reset the default anchoring of the advanced marker element\n  // that comes from the api\n  const transformStyle = `translate(50%, 100%) translate(-${xTranslation}, -${yTranslation})`;\n  return /*#__PURE__*/(\n    // anchoring container\n    React.createElement(\"div\", {\n      style: {\n        transform: transformStyle\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      style: styles\n    }, children))\n  );\n};\nfunction useAdvancedMarker(props) {\n  const [marker, setMarker] = useState(null);\n  const [contentContainer, setContentContainer] = useState(null);\n  const map = useMap();\n  const markerLibrary = useMapsLibrary('marker');\n  const {\n    children,\n    onClick,\n    className,\n    onMouseEnter,\n    onMouseLeave,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    clickable,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n  const numChildren = Children.count(children);\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n    setMarker(newMarker);\n    // create the container for marker content if there are children\n    let contentElement = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n      // We need some kind of flag to identify the custom marker content\n      // in the infowindow component. Choosing a custom property instead of a className\n      // to not encourage users to style the marker content directly.\n      contentElement.isCustomMarker = true;\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n    return () => {\n      var _contentElement;\n      newMarker.map = null;\n      (_contentElement = contentElement) == null || _contentElement.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n  // When no children are present we don't have our own wrapper div\n  // which usually gets the user provided className. In this case\n  // we set the className directly on the marker.content element that comes\n  // with the AdvancedMarker.\n  useEffect(() => {\n    if (!marker || !marker.content || numChildren > 0) return;\n    marker.content.className = className || '';\n  }, [marker, className, numChildren]);\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title != null ? title : '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(marker, 'collisionBehavior', collisionBehavior);\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n    if (draggable !== undefined) marker.gmpDraggable = draggable;else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n  // set gmpClickable from props (when unspecified, it's true if the onClick or one of\n  // the hover events callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n    const gmpClickable = clickable !== undefined || Boolean(onClick) || Boolean(onMouseEnter) || Boolean(onMouseLeave);\n    // gmpClickable is only available in beta version of the\n    // maps api (as of 2024-10-10)\n    marker.gmpClickable = gmpClickable;\n    // enable pointer events for the markers with custom content\n    if (gmpClickable && marker != null && marker.content && isElementNode(marker.content)) {\n      marker.content.style.pointerEvents = 'none';\n      if (marker.content.firstElementChild) {\n        marker.content.firstElementChild.style.pointerEvents = 'all';\n      }\n    }\n  }, [marker, clickable, onClick, onMouseEnter, onMouseLeave]);\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n  useDomEventListener(marker == null ? void 0 : marker.element, 'mouseenter', onMouseEnter);\n  useDomEventListener(marker == null ? void 0 : marker.element, 'mouseleave', onMouseLeave);\n  return [marker, contentContainer];\n}\nconst AdvancedMarker = forwardRef((props, ref) => {\n  const {\n    children,\n    style,\n    className,\n    anchorPoint\n  } = props;\n  const [marker, contentContainer] = useAdvancedMarker(props);\n  const advancedMarkerContextValue = useMemo(() => marker ? {\n    marker\n  } : null, [marker]);\n  useImperativeHandle(ref, () => marker, [marker]);\n  if (!contentContainer) return null;\n  return /*#__PURE__*/React.createElement(AdvancedMarkerContext.Provider, {\n    value: advancedMarkerContextValue\n  }, createPortal(/*#__PURE__*/React.createElement(MarkerContent, {\n    anchorPoint: anchorPoint,\n    styles: style,\n    className: className\n  }, children), contentContainer));\n});\nfunction useAdvancedMarkerRef() {\n  const [marker, setMarker] = useState(null);\n  const refCallback = useCallback(m => {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\nfunction setValueForStyles(element, styles, prevStyles) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n  const elementStyle = element.style;\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n      setValueForStyle(elementStyle, styleName, styles[styleName]);\n    }\n    return;\n  }\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (const styleName in prevStyles) {\n    if (prevStyles.hasOwnProperty(styleName) && (styles == null || !styles.hasOwnProperty(styleName))) {\n      // Clear style\n      const isCustomProperty = styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(styleName, '');\n      } else if (styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[styleName] = '';\n      }\n    }\n  }\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n  for (const styleName in styles) {\n    const value = styles[styleName];\n    if (styles.hasOwnProperty(styleName) && prevStyles[styleName] !== value) {\n      setValueForStyle(elementStyle, styleName, value);\n    }\n  }\n}\nfunction setValueForStyle(elementStyle, styleName, value) {\n  const isCustomProperty = styleName.indexOf('--') === 0;\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName] = '';\n    }\n  }\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value);\n  }\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (typeof value === 'number' && value !== 0 && !isUnitlessNumber(styleName)) {\n    elementStyle[styleName] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value;\n    } else {\n      elementStyle[styleName] = ('' + value).trim();\n    }\n  }\n}\n// CSS properties which accept numbers but are not in units of \"px\".\nconst unitlessNumbers = new Set(['animationIterationCount', 'aspectRatio', 'borderImageOutset', 'borderImageSlice', 'borderImageWidth', 'boxFlex', 'boxFlexGroup', 'boxOrdinalGroup', 'columnCount', 'columns', 'flex', 'flexGrow', 'flexPositive', 'flexShrink', 'flexNegative', 'flexOrder', 'gridArea', 'gridRow', 'gridRowEnd', 'gridRowSpan', 'gridRowStart', 'gridColumn', 'gridColumnEnd', 'gridColumnSpan', 'gridColumnStart', 'fontWeight', 'lineClamp', 'lineHeight', 'opacity', 'order', 'orphans', 'scale', 'tabSize', 'widows', 'zIndex', 'zoom', 'fillOpacity',\n// SVG-related properties\n'floodOpacity', 'stopOpacity', 'strokeDasharray', 'strokeDashoffset', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth']);\nfunction isUnitlessNumber(name) {\n  return unitlessNumbers.has(name);\n}\nconst _excluded$1 = [\"children\", \"headerContent\", \"style\", \"className\", \"pixelOffset\", \"anchor\", \"shouldFocus\", \"onClose\", \"onCloseClick\"];\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nconst InfoWindow = props => {\n  const {\n      // content options\n      children,\n      headerContent,\n      style,\n      className,\n      pixelOffset,\n      // open options\n      anchor,\n      shouldFocus,\n      // events\n      onClose,\n      onCloseClick\n      // other options\n    } = props,\n    infoWindowOptions = _objectWithoutPropertiesLoose(props, _excluded$1);\n  // ## create infowindow instance once the mapsLibrary is available.\n  const mapsLibrary = useMapsLibrary('maps');\n  const [infoWindow, setInfoWindow] = useState(null);\n  const contentContainerRef = useRef(null);\n  const headerContainerRef = useRef(null);\n  useEffect(() => {\n    if (!mapsLibrary) return;\n    contentContainerRef.current = document.createElement('div');\n    headerContainerRef.current = document.createElement('div');\n    const opts = infoWindowOptions;\n    if (pixelOffset) {\n      opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    if (headerContent) {\n      // if headerContent is specified as string we can directly forward it,\n      // otherwise we'll pass the element the portal will render into\n      opts.headerContent = typeof headerContent === 'string' ? headerContent : headerContainerRef.current;\n    }\n    // intentionally shadowing the state variables here\n    const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n    infoWindow.setContent(contentContainerRef.current);\n    setInfoWindow(infoWindow);\n    // unmount: remove infoWindow and content elements (note: close is called in a different effect-cleanup)\n    return () => {\n      var _contentContainerRef$, _headerContainerRef$c;\n      infoWindow.setContent(null);\n      (_contentContainerRef$ = contentContainerRef.current) == null || _contentContainerRef$.remove();\n      (_headerContainerRef$c = headerContainerRef.current) == null || _headerContainerRef$c.remove();\n      contentContainerRef.current = null;\n      headerContainerRef.current = null;\n      setInfoWindow(null);\n    };\n  },\n  // `infoWindowOptions` and other props are missing from dependencies:\n  //\n  // We don't want to re-create the infowindow instance\n  // when the options change.\n  // Updating the options is handled in the useEffect below.\n  //\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [mapsLibrary]);\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  const prevStyleRef = useRef(null);\n  useEffect(() => {\n    if (!infoWindow || !contentContainerRef.current) return;\n    setValueForStyles(contentContainerRef.current, style || null, prevStyleRef.current);\n    prevStyleRef.current = style || null;\n    if (className !== contentContainerRef.current.className) contentContainerRef.current.className = className || '';\n  }, [infoWindow, className, style]);\n  // ## update options\n  useDeepCompareEffect(() => {\n    if (!infoWindow) return;\n    const opts = infoWindowOptions;\n    if (!pixelOffset) {\n      opts.pixelOffset = null;\n    } else {\n      opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    if (!headerContent) {\n      opts.headerContent = null;\n    } else {\n      opts.headerContent = typeof headerContent === 'string' ? headerContent : headerContainerRef.current;\n    }\n    infoWindow.setOptions(infoWindowOptions);\n  },\n  // dependency `infoWindow` isn't needed since options are also passed\n  // to the constructor when a new infoWindow is created.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [infoWindowOptions, pixelOffset, headerContent]);\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n  // ## open info window when content and map are available\n  const map = useMap();\n  useEffect(() => {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!map || !infoWindow || anchor === null) return;\n    const isOpenedWithAnchor = !!anchor;\n    const openOptions = {\n      map\n    };\n    if (anchor) {\n      openOptions.anchor = anchor;\n      // Only do the infowindow adjusting when dealing with an AdvancedMarker\n      if (isAdvancedMarker(anchor) && anchor.content instanceof Element) {\n        const wrapper = anchor.content;\n        const wrapperBcr = wrapper == null ? void 0 : wrapper.getBoundingClientRect();\n        // This checks whether or not the anchor has custom content with our own\n        // div wrapper. If not, that means we have a regular AdvancedMarker without any children.\n        // In that case we do not want to adjust the infowindow since it is all handled correctly\n        // by the Google Maps API.\n        if (wrapperBcr && wrapper != null && wrapper.isCustomMarker) {\n          var _anchor$content$first;\n          // We can safely typecast here since we control that element and we know that\n          // it is a div\n          const anchorDomContent = (_anchor$content$first = anchor.content.firstElementChild) == null ? void 0 : _anchor$content$first.firstElementChild;\n          const contentBcr = anchorDomContent == null ? void 0 : anchorDomContent.getBoundingClientRect();\n          // center infowindow above marker\n          const anchorOffsetX = contentBcr.x - wrapperBcr.x + (contentBcr.width - wrapperBcr.width) / 2;\n          const anchorOffsetY = contentBcr.y - wrapperBcr.y;\n          const opts = infoWindowOptions;\n          opts.pixelOffset = new google.maps.Size(pixelOffset ? pixelOffset[0] + anchorOffsetX : anchorOffsetX, pixelOffset ? pixelOffset[1] + anchorOffsetY : anchorOffsetY);\n          infoWindow.setOptions(opts);\n        }\n      }\n    }\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n    infoWindow.open(openOptions);\n    return () => {\n      // Note: when the infowindow has an anchor, it will automatically show up again when the\n      // anchor was removed from the map before infoWindow.close() is called but the it gets\n      // added back to the map after that.\n      // More information here: https://issuetracker.google.com/issues/343750849\n      if (isOpenedWithAnchor) infoWindow.set('anchor', null);\n      infoWindow.close();\n    };\n  }, [infoWindow, anchor, map, shouldFocus, infoWindowOptions, pixelOffset]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentContainerRef.current && createPortal(children, contentContainerRef.current), headerContainerRef.current !== null && createPortal(headerContent, headerContainerRef.current));\n};\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nconst ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n};\nconst MapControl = ({\n  children,\n  position\n}) => {\n  const controlContainer = useMemo(() => document.createElement('div'), []);\n  const map = useMap();\n  useEffect(() => {\n    if (!map) return;\n    const controls = map.controls[position];\n    controls.push(controlContainer);\n    return () => {\n      const controlsArray = controls.getArray();\n      // controlsArray could be undefined if the map is in an undefined state (e.g. invalid API-key, see #276\n      if (!controlsArray) return;\n      const index = controlsArray.indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [controlContainer, map, position]);\n  return createPortal(children, controlContainer);\n};\nconst _excluded = [\"onClick\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"onMouseOver\", \"onMouseOut\"];\nfunction useMarker(props) {\n  const [marker, setMarker] = useState(null);\n  const map = useMap();\n  const {\n      onClick,\n      onDrag,\n      onDragStart,\n      onDragEnd,\n      onMouseOver,\n      onMouseOut\n    } = props,\n    markerOptions = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    position,\n    draggable\n  } = markerOptions;\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined) console.error('<Marker> has to be inside a Map component.');\n      return;\n    }\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n    const m = marker;\n    // Add event listeners\n    const gme = google.maps.event;\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n    marker.setDraggable(Boolean(draggable));\n    return () => {\n      gme.clearInstanceListeners(m);\n    };\n  }, [marker, draggable, onClick, onDrag, onDragStart, onDragEnd, onMouseOver, onMouseOut]);\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n  return marker;\n}\n/**\n * Component to render a marker on a map\n */\nconst Marker = forwardRef((props, ref) => {\n  const marker = useMarker(props);\n  useImperativeHandle(ref, () => marker, [marker]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n});\nfunction useMarkerRef() {\n  const [marker, setMarker] = useState(null);\n  const refCallback = useCallback(m => {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\n\n/**\n * Component to configure the appearance of an AdvancedMarker\n */\nconst Pin = props => {\n  var _useContext;\n  const advancedMarker = (_useContext = useContext(AdvancedMarkerContext)) == null ? void 0 : _useContext.marker;\n  const glyphContainer = useMemo(() => document.createElement('div'), []);\n  // Create Pin View instance\n  useEffect(() => {\n    var _advancedMarker$conte;\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error('The <Pin> component can only be used inside <AdvancedMarker>.');\n      }\n      return;\n    }\n    if (props.glyph && props.children) {\n      logErrorOnce('The <Pin> component only uses children to render the glyph if both the glyph property and children are present.');\n    }\n    if (Children.count(props.children) > 1) {\n      logErrorOnce('Passing multiple children to the <Pin> component might lead to unexpected results.');\n    }\n    const pinViewOptions = _extends({}, props);\n    const pinElement = new google.maps.marker.PinElement(pinViewOptions);\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n    // Set content of Advanced Marker View to the Pin View element\n    // Here we are selecting the anchor container.\n    // The hierarchy is as follows:\n    // \"advancedMarker.content\" (from google) -> \"pointer events reset div\" -> \"anchor container\"\n    const markerContent = (_advancedMarker$conte = advancedMarker.content) == null || (_advancedMarker$conte = _advancedMarker$conte.firstChild) == null ? void 0 : _advancedMarker$conte.firstChild;\n    while (markerContent != null && markerContent.firstChild) {\n      markerContent.removeChild(markerContent.firstChild);\n    }\n    if (markerContent) {\n      markerContent.appendChild(pinElement.element);\n    }\n  }, [advancedMarker, glyphContainer, props]);\n  return createPortal(props.children, glyphContainer);\n};\nconst mapLinear = (x, a1, a2, b1, b2) => b1 + (x - a1) * (b2 - b1) / (a2 - a1);\nconst getMapMaxTilt = zoom => {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n/**\n * Function to limit the tilt range of the Google map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst limitTiltRange = ({\n  viewState\n}) => {\n  const pitch = viewState.pitch;\n  const gmZoom = viewState.zoom + 1;\n  const maxTilt = getMapMaxTilt(gmZoom);\n  return _extends({}, viewState, {\n    fovy: 25,\n    pitch: Math.min(maxTilt, pitch)\n  });\n};\nexport { APILoadingStatus, APIProvider, APIProviderContext, AdvancedMarker, AdvancedMarkerAnchorPoint, AdvancedMarkerContext, CollisionBehavior, ColorScheme, ControlPosition, GoogleMapsContext, InfoWindow, Map, MapControl, Marker, Pin, RenderingType, isAdvancedMarker, isLatLngLiteral, latLngEquals, limitTiltRange, toLatLngLiteral, useAdvancedMarkerRef, useApiIsLoaded, useApiLoadingStatus, useMap, useMapsLibrary, useMarkerRef };","map":{"version":3,"names":["APILoadingStatus","NOT_LOADED","LOADING","LOADED","FAILED","AUTH_FAILURE","MAPS_API_BASE_URL","GoogleMapsApiLoader","load","params","onLoadingStatusChange","_window$google","libraries","split","serializedParams","serializeParams","listeners","push","window","google","maps","importLibrary","serializedApiParams","loadingStatus","notifyLoadingStatusListeners","initImportLibrary","console","warn","librariesToLoad","Promise","all","map","name","v","key","language","region","authReferrerPolicy","solutionChannel","join","error","apiPromise","loadApi","resolve","reject","_document$querySelect","scriptElement","document","createElement","urlParams","URLSearchParams","value","Object","entries","urlParamName","replace","t","toLowerCase","set","String","async","src","toString","nonce","querySelector","onerror","Error","__googleMapsCallback__","gm_authFailure","head","append","libraryName","then","fn","DEFAULT_SOLUTION_CHANNEL","APIProviderContext","React","createContext","useMapInstances","mapInstances","setMapInstances","useState","addMapInstance","mapInstance","id","instances","_extends","removeMapInstance","_ref","remaining","_objectWithoutPropertiesLoose","_toPropertyKey","clearMapInstances","useGoogleMapsApiLoader","props","onLoad","onError","apiKey","version","otherApiParams","_excluded$3","status","setStatus","loadedLibraries","addLoadedLibrary","useReducer","action","librariesString","useMemo","JSON","stringify","useCallback","_google","res","useEffect","length","channel","undefined","APIProvider","children","loaderProps","_excluded2$1","contextValue","Provider","useMapEvents","propName","eventPropNames","handler","eventType","propNameToEventType","listener","event","addListener","ev","createMapEvent","remove","type","srcEvent","detail","stoppable","stop","cameraEventTypes","includes","camEvent","center","getCenter","zoom","getZoom","heading","getHeading","tilt","getTilt","bounds","getBounds","Number","isFinite","toJSON","lat","lng","north","east","south","west","mouseEventTypes","_srcEvent$latLng","mouseEvent","domEvent","latLng","placeId","onBoundsChanged","onCenterChanged","onClick","onContextmenu","onDblclick","onDrag","onDragend","onDragstart","onHeadingChanged","onIdle","onIsFractionalZoomEnabledChanged","onMapCapabilitiesChanged","onMapTypeIdChanged","onMousemove","onMouseout","onMouseover","onProjectionChanged","onRenderingTypeChanged","onTilesLoaded","onTiltChanged","onZoomChanged","onCameraChanged","keys","useDeepCompareEffect","effect","deps","ref","useRef","current","isDeepEqual","mapOptionKeys","Set","useMapOptions","mapProps","mapOptions","has","setOptions","useApiLoadingStatus","_useContext","useContext","useDeckGLCameraUpdate","viewport","viewState","isDeckGlControlled","useLayoutEffect","latitude","longitude","bearing","pitch","moveCamera","isLatLngLiteral","obj","latLngEquals","a","b","A","toLatLngLiteral","B","useMapCameraParams","cameraStateRef","nextCamera","needsUpdate","AuthFailureMessage","style","position","top","left","bottom","right","zIndex","display","flexFlow","textAlign","justifyContent","fontSize","color","background","padding","useCallbackRef","el","setEl","useApiIsLoaded","useForceUpdate","forceUpdate","x","handleBoundsChange","assign","useTrackedCameraStateRef","CachedMapStack","pop","useMapInstance","context","apiIsLoaded","setMap","container","containerRef","defaultBounds","defaultCenter","defaultZoom","defaultHeading","defaultTilt","reuseMaps","renderingType","colorScheme","_excluded$2","hasZoom","hasCenter","savedMapStateRef","mapId","cacheKey","mapDiv","getDiv","appendChild","setTimeout","setCenter","height","Map","defBounds","_excluded2","fitBounds","savedMapId","cameraState","savedCameraState","clearInstanceListeners","GoogleMapsContext","ColorScheme","DARK","LIGHT","FOLLOW_SYSTEM","RenderingType","VECTOR","RASTER","UNINITIALIZED","className","mapRef","isControlledExternally","controlled","disableDefaultUI","gestureHandling","keyboardShortcuts","cameraOptions","_lat","_lng","_props$zoom","_props$heading","_props$tilt","combinedStyle","width","deckGLViewProps","shownMessages","logErrorOnce","args","add","useMap","ctx","useMapsLibrary","useMapsEventListener","target","callback","usePropBinding","object","prop","useDomEventListener","addEventListener","removeEventListener","isAdvancedMarker","marker","content","isElementNode","node","nodeType","Node","ELEMENT_NODE","CollisionBehavior","REQUIRED","REQUIRED_AND_HIDES_OPTIONAL","OPTIONAL_AND_HIDES_LOWER_PRIORITY","AdvancedMarkerContext","AdvancedMarkerAnchorPoint","TOP_LEFT","TOP_CENTER","TOP","TOP_RIGHT","LEFT_CENTER","LEFT_TOP","LEFT","LEFT_BOTTOM","RIGHT_TOP","RIGHT","RIGHT_CENTER","RIGHT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM","BOTTOM_RIGHT","CENTER","MarkerContent","styles","anchorPoint","xTranslation","yTranslation","transformStyle","transform","useAdvancedMarker","setMarker","contentContainer","setContentContainer","markerLibrary","onMouseEnter","onMouseLeave","onDragStart","onDragEnd","collisionBehavior","clickable","draggable","title","numChildren","Children","count","newMarker","AdvancedMarkerElement","contentElement","isCustomMarker","_contentElement","gmpDraggable","gmpClickable","Boolean","pointerEvents","firstElementChild","element","AdvancedMarker","forwardRef","advancedMarkerContextValue","useImperativeHandle","createPortal","useAdvancedMarkerRef","refCallback","m","setValueForStyles","prevStyles","elementStyle","styleName","hasOwnProperty","setValueForStyle","isCustomProperty","indexOf","setProperty","cssFloat","isUnitlessNumber","trim","unitlessNumbers","InfoWindow","headerContent","pixelOffset","anchor","shouldFocus","onClose","onCloseClick","infoWindowOptions","_excluded$1","mapsLibrary","infoWindow","setInfoWindow","contentContainerRef","headerContainerRef","opts","Size","setContent","_contentContainerRef$","_headerContainerRef$c","prevStyleRef","isOpenedWithAnchor","openOptions","Element","wrapper","wrapperBcr","getBoundingClientRect","_anchor$content$first","anchorDomContent","contentBcr","anchorOffsetX","anchorOffsetY","y","open","close","Fragment","ControlPosition","BLOCK_START_INLINE_START","BLOCK_START_INLINE_CENTER","BLOCK_START_INLINE_END","INLINE_START_BLOCK_CENTER","INLINE_START_BLOCK_START","INLINE_START_BLOCK_END","INLINE_END_BLOCK_START","INLINE_END_BLOCK_CENTER","INLINE_END_BLOCK_END","BLOCK_END_INLINE_START","BLOCK_END_INLINE_CENTER","BLOCK_END_INLINE_END","MapControl","controlContainer","controls","controlsArray","getArray","index","removeAt","useMarker","onMouseOver","onMouseOut","markerOptions","_excluded","Marker","gme","setDraggable","setPosition","useMarkerRef","Pin","advancedMarker","glyphContainer","_advancedMarker$conte","glyph","pinViewOptions","pinElement","PinElement","markerContent","firstChild","removeChild","mapLinear","a1","a2","b1","b2","getMapMaxTilt","limitTiltRange","gmZoom","maxTilt","fovy","Math","min"],"sources":["/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/api-loading-status.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/google-maps-api-loader.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/api-provider.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-map-events.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/use-deep-compare-effect.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-map-options.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-api-loading-status.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-deckgl-camera-update.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/lat-lng-utils.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-map-camera-params.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/auth-failure-message.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/use-callback-ref.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-api-is-loaded.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/use-force-update.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-tracked-camera-state-ref.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/use-map-instance.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map/index.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/errors.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-map.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-maps-library.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-maps-event-listener.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-prop-binding.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/hooks/use-dom-event-listener.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/advanced-marker.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/set-value-for-styles.ts","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/info-window.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/map-control.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/marker.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/components/pin.tsx","/mnt/share/gmu/swe632/Jarvis/jarvis/node_modules/@vis.gl/react-google-maps/src/libraries/limit-tilt-range.ts"],"sourcesContent":["export const APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\nexport type APILoadingStatus =\n  (typeof APILoadingStatus)[keyof typeof APILoadingStatus];\n","import {APILoadingStatus} from './api-loading-status';\n\nexport type ApiParams = {\n  key: string;\n  v?: string;\n  language?: string;\n  region?: string;\n  libraries?: string;\n  channel?: number;\n  solutionChannel?: string;\n  authReferrerPolicy?: string;\n};\n\ntype LoadingStatusCallback = (status: APILoadingStatus) => void;\n\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nexport class GoogleMapsApiLoader {\n  /**\n   * The current loadingStatus of the API.\n   */\n  public static loadingStatus: APILoadingStatus = APILoadingStatus.NOT_LOADED;\n\n  /**\n   * The parameters used for first loading the API.\n   */\n  public static serializedApiParams?: string;\n\n  /**\n   * A list of functions to be notified when the loading status changes.\n   */\n  private static listeners: LoadingStatusCallback[] = [];\n\n  /**\n   * Loads the Maps JavaScript API with the specified parameters.\n   * Since the Maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   */\n  static async load(\n    params: ApiParams,\n    onLoadingStatusChange: (status: APILoadingStatus) => void\n  ): Promise<void> {\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n\n    this.listeners.push(onLoadingStatusChange);\n\n    // Note: if `google.maps.importLibrary` has been defined externally, we\n    //   assume that loading is complete and successful.\n    //   If it was defined by a previous call to this method, a warning\n    //   message is logged if there are differences in api-parameters used\n    //   for both calls.\n\n    if (window.google?.maps?.importLibrary as unknown) {\n      // no serialized parameters means it was loaded externally\n      if (!this.serializedApiParams) {\n        this.loadingStatus = APILoadingStatus.LOADED;\n      }\n      this.notifyLoadingStatusListeners();\n    } else {\n      this.serializedApiParams = serializedParams;\n      this.initImportLibrary(params);\n    }\n\n    if (\n      this.serializedApiParams &&\n      this.serializedApiParams !== serializedParams\n    ) {\n      console.warn(\n        `[google-maps-api-loader] The maps API has already been loaded ` +\n          `with different parameters and will not be loaded again. Refresh the ` +\n          `page for new values to have effect.`\n      );\n    }\n\n    const librariesToLoad = ['maps', ...libraries];\n    await Promise.all(\n      librariesToLoad.map(name => google.maps.importLibrary(name))\n    );\n  }\n\n  /**\n   * Serialize the paramters used to load the library for easier comparison.\n   */\n  private static serializeParams(params: ApiParams): string {\n    return [\n      params.v,\n      params.key,\n      params.language,\n      params.region,\n      params.authReferrerPolicy,\n      params.solutionChannel\n    ].join('/');\n  }\n\n  /**\n   * Creates the global `google.maps.importLibrary` function for bootstrapping.\n   * This is essentially a formatted version of the dynamic loading script\n   * from the official documentation with some minor adjustments.\n   *\n   * The created importLibrary function will load the Google Maps JavaScript API,\n   * which will then replace the `google.maps.importLibrary` function with the full\n   * implementation.\n   *\n   * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n   */\n  private static initImportLibrary(params: ApiParams) {\n    if (!window.google) window.google = {} as never;\n    if (!window.google.maps) window.google.maps = {} as never;\n\n    if (window.google.maps['importLibrary']) {\n      console.error(\n        '[google-maps-api-loader-internal]: initImportLibrary must only be called once'\n      );\n\n      return;\n    }\n\n    let apiPromise: Promise<void> | null = null;\n\n    const loadApi = () => {\n      if (apiPromise) return apiPromise;\n\n      apiPromise = new Promise((resolve, reject) => {\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(\n            /[A-Z]/g,\n            t => '_' + t[0].toLowerCase()\n          );\n          urlParams.set(urlParamName, String(value));\n        }\n        urlParams.set('loading', 'async');\n        urlParams.set('callback', '__googleMapsCallback__');\n\n        scriptElement.async = true;\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n        scriptElement.nonce =\n          (document.querySelector('script[nonce]') as HTMLScriptElement)\n            ?.nonce || '';\n\n        scriptElement.onerror = () => {\n          this.loadingStatus = APILoadingStatus.FAILED;\n          this.notifyLoadingStatusListeners();\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        };\n\n        window.__googleMapsCallback__ = () => {\n          this.loadingStatus = APILoadingStatus.LOADED;\n          this.notifyLoadingStatusListeners();\n          resolve();\n        };\n\n        window.gm_authFailure = () => {\n          this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n          this.notifyLoadingStatusListeners();\n        };\n\n        this.loadingStatus = APILoadingStatus.LOADING;\n        this.notifyLoadingStatusListeners();\n\n        document.head.append(scriptElement);\n      });\n\n      return apiPromise;\n    };\n\n    // for the first load, we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName =>\n      loadApi().then(() => google.maps.importLibrary(libraryName));\n  }\n\n  /**\n   * Calls all registered loadingStatusListeners after a status update.\n   */\n  private static notifyLoadingStatusListeners() {\n    for (const fn of this.listeners) {\n      fn(this.loadingStatus);\n    }\n  }\n}\n\n// Declare global maps callback functions\ndeclare global {\n  interface Window {\n    __googleMapsCallback__?: () => void;\n    gm_authFailure?: () => void;\n  }\n}\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from 'react';\n\nimport {\n  ApiParams,\n  GoogleMapsApiLoader\n} from '../libraries/google-maps-api-loader';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\ntype ImportLibraryFunction = typeof google.maps.importLibrary;\ntype GoogleMapsLibrary = Awaited<ReturnType<ImportLibraryFunction>>;\ntype LoadedLibraries = {[name: string]: GoogleMapsLibrary};\n\nexport interface APIProviderContextValue {\n  status: APILoadingStatus;\n  loadedLibraries: LoadedLibraries;\n  importLibrary: typeof google.maps.importLibrary;\n  mapInstances: Record<string, google.maps.Map>;\n  addMapInstance: (map: google.maps.Map, id?: string) => void;\n  removeMapInstance: (id?: string) => void;\n  clearMapInstances: () => void;\n}\n\nconst DEFAULT_SOLUTION_CHANNEL = 'GMP_visgl_rgmlibrary_v1_default';\n\nexport const APIProviderContext =\n  React.createContext<APIProviderContextValue | null>(null);\n\nexport type APIProviderProps = {\n  /**\n   * apiKey must be provided to load the Google Maps JavaScript API. To create an API key, see: https://developers.google.com/maps/documentation/javascript/get-api-key\n   * Part of:\n   */\n  apiKey: string;\n  /**\n   * A custom id to reference the script tag can be provided. The default is set to 'google-maps-api'\n   * @default 'google-maps-api'\n   */\n  libraries?: Array<string>;\n  /**\n   * A specific version of the Google Maps JavaScript API can be used.\n   * Read more about versioning: https://developers.google.com/maps/documentation/javascript/versions\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  version?: string;\n  /**\n   * Sets the map to a specific region.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  region?: string;\n  /**\n   * Use a specific language for the map.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  language?: string;\n  /**\n   * auth_referrer_policy can be set to 'origin'.\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  authReferrerPolicy?: string;\n  /**\n   * To understand usage and ways to improve our solutions, Google includes the\n   * `solution_channel` query parameter in API calls to gather information about\n   * code usage. You may opt out at any time by setting this attribute to an\n   * empty string. Read more in the\n   * [documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#solutions-usage).\n   */\n  channel?: number;\n  /**\n   * To track usage of Google Maps JavaScript API via numeric channels. The only acceptable channel values are numbers from 0-999.\n   * Read more in the\n   * [documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#usage-tracking-per-channel)\n   */\n  solutionChannel?: string;\n  /**\n   * A function that can be used to execute code after the Google Maps JavaScript API has been loaded.\n   */\n  onLoad?: () => void;\n  /**\n   * A function that will be called if there was an error when loading the Google Maps JavaScript API.\n   */\n  onError?: (error: unknown) => void;\n};\n\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState<\n    Record<string, google.maps.Map>\n  >({});\n\n  const addMapInstance = (mapInstance: google.maps.Map, id = 'default') => {\n    setMapInstances(instances => ({...instances, [id]: mapInstance}));\n  };\n\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(({[id]: _, ...remaining}) => remaining);\n  };\n\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n\n  return {mapInstances, addMapInstance, removeMapInstance, clearMapInstances};\n}\n\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props: APIProviderProps) {\n  const {\n    onLoad,\n    onError,\n    apiKey,\n    version,\n    libraries = [],\n    ...otherApiParams\n  } = props;\n\n  const [status, setStatus] = useState<APILoadingStatus>(\n    GoogleMapsApiLoader.loadingStatus\n  );\n  const [loadedLibraries, addLoadedLibrary] = useReducer(\n    (\n      loadedLibraries: LoadedLibraries,\n      action: {name: keyof LoadedLibraries; value: LoadedLibraries[string]}\n    ) => {\n      return loadedLibraries[action.name]\n        ? loadedLibraries\n        : {...loadedLibraries, [action.name]: action.value};\n    },\n    {}\n  );\n\n  const librariesString = useMemo(() => libraries?.join(','), [libraries]);\n  const serializedParams = useMemo(\n    () => JSON.stringify({apiKey, version, ...otherApiParams}),\n    [apiKey, version, otherApiParams]\n  );\n\n  const importLibrary: typeof google.maps.importLibrary = useCallback(\n    async (name: string) => {\n      if (loadedLibraries[name]) {\n        return loadedLibraries[name];\n      }\n\n      if (!google?.maps?.importLibrary) {\n        throw new Error(\n          '[api-provider-internal] importLibrary was called before ' +\n            'google.maps.importLibrary was defined.'\n        );\n      }\n\n      const res = await window.google.maps.importLibrary(name);\n      addLoadedLibrary({name, value: res});\n\n      return res;\n    },\n    [loadedLibraries]\n  );\n\n  useEffect(\n    () => {\n      (async () => {\n        try {\n          const params: ApiParams = {key: apiKey, ...otherApiParams};\n          if (version) params.v = version;\n          if (librariesString?.length > 0) params.libraries = librariesString;\n\n          if (\n            params.channel === undefined ||\n            params.channel < 0 ||\n            params.channel > 999\n          )\n            delete params.channel;\n\n          if (params.solutionChannel === undefined)\n            params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;\n          else if (params.solutionChannel === '') delete params.solutionChannel;\n\n          await GoogleMapsApiLoader.load(params, status => setStatus(status));\n\n          for (const name of ['core', 'maps', ...libraries]) {\n            await importLibrary(name);\n          }\n\n          if (onLoad) {\n            onLoad();\n          }\n        } catch (error) {\n          if (onError) {\n            onError(error);\n          } else {\n            console.error(\n              '<ApiProvider> failed to load the Google Maps JavaScript API',\n              error\n            );\n          }\n        }\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [apiKey, librariesString, serializedParams]\n  );\n\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nexport const APIProvider = (\n  props: PropsWithChildren<APIProviderProps>\n): ReactElement | null => {\n  const {children, ...loaderProps} = props;\n  const {mapInstances, addMapInstance, removeMapInstance, clearMapInstances} =\n    useMapInstances();\n\n  const {status, loadedLibraries, importLibrary} =\n    useGoogleMapsApiLoader(loaderProps);\n\n  const contextValue: APIProviderContextValue = useMemo(\n    () => ({\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    }),\n    [\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    ]\n  );\n\n  return (\n    <APIProviderContext.Provider value={contextValue}>\n      {children}\n    </APIProviderContext.Provider>\n  );\n};\n","import {useEffect} from 'react';\n\n/**\n * Handlers for all events that could be emitted by map-instances.\n */\nexport type MapEventProps = Partial<{\n  // map view state events\n  onBoundsChanged: (event: MapCameraChangedEvent) => void;\n  onCenterChanged: (event: MapCameraChangedEvent) => void;\n  onHeadingChanged: (event: MapCameraChangedEvent) => void;\n  onTiltChanged: (event: MapCameraChangedEvent) => void;\n  onZoomChanged: (event: MapCameraChangedEvent) => void;\n  onCameraChanged: (event: MapCameraChangedEvent) => void;\n\n  // mouse / touch / pointer events\n  onClick: (event: MapMouseEvent) => void;\n  onDblclick: (event: MapMouseEvent) => void;\n  onContextmenu: (event: MapMouseEvent) => void;\n  onMousemove: (event: MapMouseEvent) => void;\n  onMouseover: (event: MapMouseEvent) => void;\n  onMouseout: (event: MapMouseEvent) => void;\n  onDrag: (event: MapEvent) => void;\n  onDragend: (event: MapEvent) => void;\n  onDragstart: (event: MapEvent) => void;\n\n  // loading events\n  onTilesLoaded: (event: MapEvent) => void;\n  onIdle: (event: MapEvent) => void;\n\n  // configuration events\n  onProjectionChanged: (event: MapEvent) => void;\n  onIsFractionalZoomEnabledChanged: (event: MapEvent) => void;\n  onMapCapabilitiesChanged: (event: MapEvent) => void;\n  onMapTypeIdChanged: (event: MapEvent) => void;\n  onRenderingTypeChanged: (event: MapEvent) => void;\n}>;\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nexport function useMapEvents(\n  map: google.maps.Map | null,\n  props: MapEventProps\n) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName] as (ev: MapEvent) => void;\n    const eventType = propNameToEventType[propName];\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n\n      const listener = google.maps.event.addListener(\n        map,\n        eventType,\n        (ev?: google.maps.MapMouseEvent | google.maps.IconMouseEvent) => {\n          handler(createMapEvent(eventType, map, ev));\n        }\n      );\n\n      return () => listener.remove();\n    }, [map, eventType, handler]);\n  }\n}\n\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(\n  type: string,\n  map: google.maps.Map,\n  srcEvent?: google.maps.MapMouseEvent | google.maps.IconMouseEvent\n): MapEvent {\n  const ev: MapEvent = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev as MapCameraChangedEvent;\n\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn(\n        '[createEvent] at least one of the values from the map ' +\n          'returned undefined. This is not expected to happen. Please ' +\n          'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n      );\n    }\n\n    camEvent.detail = {\n      center: center?.toJSON() || {lat: 0, lng: 0},\n      zoom: (zoom as number) || 0,\n      heading: heading as number,\n      tilt: tilt as number,\n      bounds: bounds?.toJSON() || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    if (!srcEvent)\n      throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev as MapMouseEvent;\n\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n\n    mouseEvent.detail = {\n      latLng: srcEvent.latLng?.toJSON() || null,\n      placeId: (srcEvent as google.maps.IconMouseEvent).placeId\n    };\n\n    return mouseEvent;\n  }\n\n  return ev;\n}\n\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType: {[prop in keyof Required<MapEventProps>]: string} = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n} as const;\n\nconst cameraEventTypes = [\n  'bounds_changed',\n  'center_changed',\n  'heading_changed',\n  'tilt_changed',\n  'zoom_changed'\n];\n\nconst mouseEventTypes = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseout',\n  'mouseover'\n];\n\ntype MapEventPropName = keyof MapEventProps;\nconst eventPropNames = Object.keys(propNameToEventType) as MapEventPropName[];\n\nexport type MapEvent<T = unknown> = {\n  type: string;\n  map: google.maps.Map;\n  detail: T;\n\n  stoppable: boolean;\n  stop: () => void;\n  domEvent?: MouseEvent | TouchEvent | PointerEvent | KeyboardEvent | Event;\n};\n\nexport type MapMouseEvent = MapEvent<{\n  latLng: google.maps.LatLngLiteral | null;\n  placeId: string | null;\n}>;\n\nexport type MapCameraChangedEvent = MapEvent<{\n  center: google.maps.LatLngLiteral;\n  bounds: google.maps.LatLngBoundsLiteral;\n  zoom: number;\n  heading: number;\n  tilt: number;\n}>;\n","import {DependencyList, EffectCallback, useEffect, useRef} from 'react';\nimport isDeepEqual from 'fast-deep-equal';\n\nexport function useDeepCompareEffect(\n  effect: EffectCallback,\n  deps: DependencyList\n) {\n  const ref = useRef<DependencyList | undefined>(undefined);\n\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\n","import {MapProps} from '../map';\nimport {useDeepCompareEffect} from '../../libraries/use-deep-compare-effect';\n\nconst mapOptionKeys: Set<keyof google.maps.MapOptions> = new Set([\n  'backgroundColor',\n  'clickableIcons',\n  'controlSize',\n  'disableDefaultUI',\n  'disableDoubleClickZoom',\n  'draggable',\n  'draggableCursor',\n  'draggingCursor',\n  'fullscreenControl',\n  'fullscreenControlOptions',\n  'gestureHandling',\n  'headingInteractionEnabled',\n  'isFractionalZoomEnabled',\n  'keyboardShortcuts',\n  'mapTypeControl',\n  'mapTypeControlOptions',\n  'mapTypeId',\n  'maxZoom',\n  'minZoom',\n  'noClear',\n  'panControl',\n  'panControlOptions',\n  'restriction',\n  'rotateControl',\n  'rotateControlOptions',\n  'scaleControl',\n  'scaleControlOptions',\n  'scrollwheel',\n  'streetView',\n  'streetViewControl',\n  'streetViewControlOptions',\n  'styles',\n  'tiltInteractionEnabled',\n  'zoomControl',\n  'zoomControlOptions'\n]);\n\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nexport function useMapOptions(map: google.maps.Map | null, mapProps: MapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n\n  const mapOptions: google.maps.MapOptions = {};\n  const keys = Object.keys(mapProps) as (keyof google.maps.MapOptions)[];\n  for (const key of keys) {\n    if (!mapOptionKeys.has(key)) continue;\n\n    mapOptions[key] = mapProps[key] as never;\n  }\n\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(() => {\n    if (!map) return;\n\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n","import {useContext} from 'react';\nimport {APIProviderContext} from '../components/api-provider';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\nexport function useApiLoadingStatus(): APILoadingStatus {\n  return useContext(APIProviderContext)?.status || APILoadingStatus.NOT_LOADED;\n}\n","import {useLayoutEffect} from 'react';\n\nexport type DeckGlCompatProps = {\n  /**\n   * Viewport from deck.gl\n   */\n  viewport?: unknown;\n  /**\n   * View state from deck.gl\n   */\n  viewState?: Record<string, unknown>;\n  /**\n   * Initial View State from deck.gl\n   */\n  initialViewState?: Record<string, unknown>;\n};\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nexport function useDeckGLCameraUpdate(\n  map: google.maps.Map | null,\n  props: DeckGlCompatProps\n) {\n  const {viewport, viewState} = props;\n  const isDeckGlControlled = !!viewport;\n\n  useLayoutEffect(() => {\n    if (!map || !viewState) return;\n\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState as Record<string, number>;\n\n    map.moveCamera({\n      center: {lat: latitude, lng: longitude},\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n\n  return isDeckGlControlled;\n}\n","export function isLatLngLiteral(\n  obj: unknown\n): obj is google.maps.LatLngLiteral {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\n\nexport function latLngEquals(\n  a: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null,\n  b: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null\n): boolean {\n  if (!a || !b) return false;\n  const A = toLatLngLiteral(a);\n  const B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\n\nexport function toLatLngLiteral(\n  obj: google.maps.LatLngLiteral | google.maps.LatLng\n): google.maps.LatLngLiteral {\n  if (isLatLngLiteral(obj)) return obj;\n\n  return obj.toJSON();\n}\n","import {useLayoutEffect} from 'react';\nimport {CameraStateRef} from './use-tracked-camera-state-ref';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {MapProps} from '../map';\n\nexport function useMapCameraParams(\n  map: google.maps.Map | null,\n  cameraStateRef: CameraStateRef,\n  mapProps: MapProps\n) {\n  const center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n\n  let lat: number | null = null;\n  let lng: number | null = null;\n\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const zoom: number | null = Number.isFinite(mapProps.zoom)\n    ? (mapProps.zoom as number)\n    : null;\n  const heading: number | null = Number.isFinite(mapProps.heading)\n    ? (mapProps.heading as number)\n    : null;\n  const tilt: number | null = Number.isFinite(mapProps.tilt)\n    ? (mapProps.tilt as number)\n    : null;\n\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n\n  useLayoutEffect(() => {\n    if (!map) return;\n\n    const nextCamera: google.maps.CameraOptions = {};\n    let needsUpdate = false;\n\n    if (\n      lat !== null &&\n      lng !== null &&\n      (cameraStateRef.current.center.lat !== lat ||\n        cameraStateRef.current.center.lng !== lng)\n    ) {\n      nextCamera.center = {lat, lng};\n      needsUpdate = true;\n    }\n\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom as number;\n      needsUpdate = true;\n    }\n\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading as number;\n      needsUpdate = true;\n    }\n\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt as number;\n      needsUpdate = true;\n    }\n\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\n","import React, {CSSProperties} from 'react';\n\nexport const AuthFailureMessage = () => {\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n\n  return (\n    <div style={style}>\n      <h2>Error: AuthFailure</h2>\n      <p>\n        A problem with your API key prevents the map from rendering correctly.\n        Please make sure the value of the <code>APIProvider.apiKey</code> prop\n        is correct. Check the error-message in the console for further details.\n      </p>\n    </div>\n  );\n};\n","import {Ref, useCallback, useState} from 'react';\n\nexport function useCallbackRef<T>() {\n  const [el, setEl] = useState<T | null>(null);\n  const ref = useCallback((value: T) => setEl(value), [setEl]);\n\n  return [el, ref as Ref<T>] as const;\n}\n","import {useApiLoadingStatus} from './use-api-loading-status';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nexport function useApiIsLoaded(): boolean {\n  const status = useApiLoadingStatus();\n\n  return status === APILoadingStatus.LOADED;\n}\n","import {useReducer} from 'react';\n\nexport function useForceUpdate(): () => void {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  return forceUpdate;\n}\n","import {MutableRefObject, useEffect, useRef} from 'react';\nimport {useForceUpdate} from '../../libraries/use-force-update';\n\nexport type CameraState = {\n  center: google.maps.LatLngLiteral;\n  heading: number;\n  tilt: number;\n  zoom: number;\n};\n\nexport type CameraStateRef = MutableRefObject<CameraState>;\n\nfunction handleBoundsChange(map: google.maps.Map, ref: CameraStateRef) {\n  const center = map.getCenter();\n  const zoom = map.getZoom();\n  const heading = map.getHeading() || 0;\n  const tilt = map.getTilt() || 0;\n  const bounds = map.getBounds();\n\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn(\n      '[useTrackedCameraState] at least one of the values from the map ' +\n        'returned undefined. This is not expected to happen. Please ' +\n        'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n    );\n  }\n\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: center?.toJSON() || {lat: 0, lng: 0},\n    zoom: (zoom as number) || 0,\n    heading: heading as number,\n    tilt: tilt as number\n  });\n}\n\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nexport function useTrackedCameraStateRef(\n  map: google.maps.Map | null\n): CameraStateRef {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef<CameraState>({\n    center: {lat: 0, lng: 0},\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(() => {\n    if (!map) return;\n\n    const listener = google.maps.event.addListener(\n      map,\n      'bounds_changed',\n      () => {\n        handleBoundsChange(map, ref);\n\n        // When an event is occured, we have to update during the next cycle.\n        // The application could decide to ignore the event and not update any\n        // camera props of the map, meaning that in that case we will have to\n        // 'undo' the change to the camera.\n        forceUpdate();\n      }\n    );\n\n    return () => listener.remove();\n  }, [map, forceUpdate]);\n\n  return ref;\n}\n","import {Ref, useEffect, useRef, useState} from 'react';\n\nimport {MapProps} from '../map';\nimport {APIProviderContextValue} from '../api-provider';\n\nimport {useCallbackRef} from '../../libraries/use-callback-ref';\nimport {useApiIsLoaded} from '../../hooks/use-api-is-loaded';\nimport {\n  CameraState,\n  CameraStateRef,\n  useTrackedCameraStateRef\n} from './use-tracked-camera-state-ref';\n\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nclass CachedMapStack {\n  static entries: {[key: string]: google.maps.Map[]} = {};\n\n  static has(key: string) {\n    return this.entries[key] && this.entries[key].length > 0;\n  }\n\n  static pop(key: string) {\n    if (!this.entries[key]) return null;\n\n    return this.entries[key].pop() || null;\n  }\n\n  static push(key: string, value: google.maps.Map) {\n    if (!this.entries[key]) this.entries[key] = [];\n\n    this.entries[key].push(value);\n  }\n}\n\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nexport function useMapInstance(\n  props: MapProps,\n  context: APIProviderContextValue\n): readonly [\n  map: google.maps.Map | null,\n  containerRef: Ref<HTMLDivElement>,\n  cameraStateRef: CameraStateRef\n] {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [container, containerRef] = useCallbackRef<HTMLDivElement>();\n\n  const cameraStateRef = useTrackedCameraStateRef(map);\n\n  const {\n    id,\n    defaultBounds,\n    defaultCenter,\n    defaultZoom,\n    defaultHeading,\n    defaultTilt,\n    reuseMaps,\n    renderingType,\n    colorScheme,\n\n    ...mapOptions\n  } = props;\n\n  const hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  const hasCenter =\n    props.center !== undefined || props.defaultCenter !== undefined;\n\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn(\n      '<Map> component is missing configuration. ' +\n        'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' +\n        '`center`/`defaultCenter` props) or specify the region to show using ' +\n        '`defaultBounds`. See ' +\n        'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required'\n    );\n  }\n\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom))\n    mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading))\n    mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt))\n    mapOptions.tilt = defaultTilt;\n\n  for (const key of Object.keys(mapOptions) as (keyof typeof mapOptions)[])\n    if (mapOptions[key] === undefined) delete mapOptions[key];\n\n  const savedMapStateRef = useRef<{\n    mapId?: string | null;\n    cameraState: CameraState;\n  }>();\n\n  // create the map instance and register it in the context\n  useEffect(\n    () => {\n      if (!container || !apiIsLoaded) return;\n\n      const {addMapInstance, removeMapInstance} = context;\n\n      // note: colorScheme (upcoming feature) isn't yet in the typings, remove once that is fixed:\n      const {mapId} = props;\n      const cacheKey = `${mapId || 'default'}:${renderingType || 'default'}:${colorScheme || 'LIGHT'}`;\n\n      let mapDiv: HTMLElement;\n      let map: google.maps.Map;\n\n      if (reuseMaps && CachedMapStack.has(cacheKey)) {\n        map = CachedMapStack.pop(cacheKey) as google.maps.Map;\n        mapDiv = map.getDiv();\n\n        container.appendChild(mapDiv);\n        map.setOptions(mapOptions);\n\n        // detaching the element from the DOM lets the map fall back to its default\n        // size, setting the center will trigger reloading the map.\n        setTimeout(() => map.setCenter(map.getCenter()!), 0);\n      } else {\n        mapDiv = document.createElement('div');\n        mapDiv.style.height = '100%';\n        container.appendChild(mapDiv);\n\n        map = new google.maps.Map(mapDiv, {\n          ...mapOptions,\n          ...(renderingType\n            ? {renderingType: renderingType as google.maps.RenderingType}\n            : {}),\n          ...(colorScheme\n            ? {colorScheme: colorScheme as google.maps.ColorScheme}\n            : {})\n        });\n      }\n\n      setMap(map);\n      addMapInstance(map, id);\n\n      if (defaultBounds) {\n        const {padding, ...defBounds} = defaultBounds;\n        map.fitBounds(defBounds, padding);\n      }\n\n      // prevent map not rendering due to missing configuration\n      else if (!hasZoom || !hasCenter) {\n        map.fitBounds({east: 180, west: -180, south: -90, north: 90});\n      }\n\n      // the savedMapState is used to restore the camera parameters when the mapId is changed\n      if (savedMapStateRef.current) {\n        const {mapId: savedMapId, cameraState: savedCameraState} =\n          savedMapStateRef.current;\n        if (savedMapId !== mapId) {\n          map.setOptions(savedCameraState);\n        }\n      }\n\n      return () => {\n        savedMapStateRef.current = {\n          mapId,\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          cameraState: cameraStateRef.current\n        };\n\n        // detach the map-div from the dom\n        mapDiv.remove();\n\n        if (reuseMaps) {\n          // push back on the stack\n          CachedMapStack.push(cacheKey, map);\n        } else {\n          // remove all event-listeners to minimize the possibility of memory-leaks\n          google.maps.event.clearInstanceListeners(map);\n        }\n\n        setMap(null);\n        removeMapInstance(id);\n      };\n    },\n\n    // some dependencies are ignored in the list below:\n    //  - defaultBounds and the default* camera props will only be used once, and\n    //    changes should be ignored\n    //  - mapOptions has special hooks that take care of updating the options\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      container,\n      apiIsLoaded,\n      id,\n\n      // these props can't be changed after initialization and require a new\n      // instance to be created\n      props.mapId,\n      props.renderingType,\n      props.colorScheme\n    ]\n  );\n\n  return [map, containerRef, cameraStateRef] as const;\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useMemo\n} from 'react';\n\nimport {APIProviderContext} from '../api-provider';\n\nimport {MapEventProps, useMapEvents} from './use-map-events';\nimport {useMapOptions} from './use-map-options';\nimport {useApiLoadingStatus} from '../../hooks/use-api-loading-status';\nimport {APILoadingStatus} from '../../libraries/api-loading-status';\nimport {\n  DeckGlCompatProps,\n  useDeckGLCameraUpdate\n} from './use-deckgl-camera-update';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {useMapCameraParams} from './use-map-camera-params';\nimport {AuthFailureMessage} from './auth-failure-message';\nimport {useMapInstance} from './use-map-instance';\n\nexport interface GoogleMapsContextValue {\n  map: google.maps.Map | null;\n}\nexport const GoogleMapsContext =\n  React.createContext<GoogleMapsContextValue | null>(null);\n\nexport type {\n  MapCameraChangedEvent,\n  MapEvent,\n  MapEventProps,\n  MapMouseEvent\n} from './use-map-events';\n\nexport type MapCameraProps = {\n  center: google.maps.LatLngLiteral;\n  zoom: number;\n  heading?: number;\n  tilt?: number;\n};\n\n// ColorScheme and RenderingType are redefined here to make them usable before the\n// maps API has been fully loaded.\n\nexport const ColorScheme = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n  FOLLOW_SYSTEM: 'FOLLOW_SYSTEM'\n};\nexport type ColorScheme = (typeof ColorScheme)[keyof typeof ColorScheme];\n\nexport const RenderingType = {\n  VECTOR: 'VECTOR',\n  RASTER: 'RASTER',\n  UNINITIALIZED: 'UNINITIALIZED'\n};\nexport type RenderingType = (typeof RenderingType)[keyof typeof RenderingType];\n\n/**\n * Props for the Map Component\n */\nexport type MapProps = Omit<\n  google.maps.MapOptions,\n  'renderingType' | 'colorScheme'\n> &\n  MapEventProps &\n  DeckGlCompatProps & {\n    /**\n     * An id for the map, this is required when multiple maps are present\n     * in the same APIProvider context.\n     */\n    id?: string;\n\n    /**\n     * Additional style rules to apply to the map dom-element.\n     */\n    style?: CSSProperties;\n\n    /**\n     * Additional css class-name to apply to the element containing the map.\n     */\n    className?: string;\n\n    /**\n     * The color-scheme to use for the map.\n     */\n    colorScheme?: ColorScheme;\n\n    /**\n     * The rendering-type to be used.\n     */\n    renderingType?: RenderingType;\n\n    /**\n     * Indicates that the map will be controlled externally. Disables all controls provided by the map itself.\n     */\n    controlled?: boolean;\n\n    /**\n     * Enable caching of map-instances created by this component.\n     */\n    reuseMaps?: boolean;\n\n    defaultCenter?: google.maps.LatLngLiteral;\n    defaultZoom?: number;\n    defaultHeading?: number;\n    defaultTilt?: number;\n    /**\n     * Alternative way to specify the default camera props as a geographic region that should be fully visible\n     */\n    defaultBounds?: google.maps.LatLngBoundsLiteral & {\n      padding?: number | google.maps.Padding;\n    };\n  };\n\nexport const Map = (props: PropsWithChildren<MapProps>) => {\n  const {children, id, className, style} = props;\n  const context = useContext(APIProviderContext);\n  const loadingStatus = useApiLoadingStatus();\n\n  if (!context) {\n    throw new Error(\n      '<Map> can only be used inside an <ApiProvider> component.'\n    );\n  }\n\n  const [map, mapRef, cameraStateRef] = useMapInstance(props, context);\n\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n\n  const isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  const isControlledExternally = !!props.controlled;\n\n  // disable interactions with the map for externally controlled maps\n  useEffect(() => {\n    if (!map) return;\n\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({disableDefaultUI: true});\n    }\n\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n\n    return () => {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [\n    map,\n    isDeckGlControlled,\n    isControlledExternally,\n    props.gestureHandling,\n    props.keyboardShortcuts\n  ]);\n\n  // setup a stable cameraOptions object that can be used as dependency\n  const center = props.center ? toLatLngLiteral(props.center) : null;\n  let lat: number | null = null;\n  let lng: number | null = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const cameraOptions: google.maps.CameraOptions = useMemo(() => {\n    return {\n      center: {lat: lat ?? 0, lng: lng ?? 0},\n      zoom: props.zoom ?? 0,\n      heading: props.heading ?? 0,\n      tilt: props.tilt ?? 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(() => {\n    if (!map || !isControlledExternally) return;\n\n    map.moveCamera(cameraOptions);\n    const listener = map.addListener('bounds_changed', () => {\n      map.moveCamera(cameraOptions);\n    });\n\n    return () => listener.remove();\n  }, [map, isControlledExternally, cameraOptions]);\n\n  const combinedStyle: CSSProperties = useMemo(\n    () => ({\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      // when using deckgl, the map should be sent to the back\n      zIndex: isDeckGlControlled ? -1 : 0,\n\n      ...style\n    }),\n    [style, isDeckGlControlled]\n  );\n\n  const contextValue: GoogleMapsContextValue = useMemo(() => ({map}), [map]);\n\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return (\n      <div\n        style={{position: 'relative', ...(className ? {} : combinedStyle)}}\n        className={className}>\n        <AuthFailureMessage />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={mapRef}\n      data-testid={'map'}\n      style={className ? undefined : combinedStyle}\n      className={className}\n      {...(id ? {id} : {})}>\n      {map ? (\n        <GoogleMapsContext.Provider value={contextValue}>\n          {children}\n        </GoogleMapsContext.Provider>\n      ) : null}\n    </div>\n  );\n};\nMap.deckGLViewProps = true;\n","const shownMessages = new Set();\n\nexport function logErrorOnce(...args: Parameters<typeof console.error>) {\n  const key = JSON.stringify(args);\n\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n\n    console.error(...args);\n  }\n}\n","import {useContext} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {GoogleMapsContext} from '../components/map';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nexport const useMap = (id: string | null = null): google.maps.Map | null => {\n  const ctx = useContext(APIProviderContext);\n  const {map} = useContext(GoogleMapsContext) || {};\n\n  if (ctx === null) {\n    logErrorOnce(\n      'useMap(): failed to retrieve APIProviderContext. ' +\n        'Make sure that the <APIProvider> component exists and that the ' +\n        'component you are calling `useMap()` from is a sibling of the ' +\n        '<APIProvider>.'\n    );\n\n    return null;\n  }\n\n  const {mapInstances} = ctx;\n\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n\n  // otherwise, return the closest ancestor\n  if (map) return map;\n\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\n","import {useContext, useEffect} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {useApiIsLoaded} from './use-api-is-loaded';\n\ninterface ApiLibraries {\n  core: google.maps.CoreLibrary;\n  maps: google.maps.MapsLibrary;\n  places: google.maps.PlacesLibrary;\n  geocoding: google.maps.GeocodingLibrary;\n  routes: google.maps.RoutesLibrary;\n  marker: google.maps.MarkerLibrary;\n  geometry: google.maps.GeometryLibrary;\n  elevation: google.maps.ElevationLibrary;\n  streetView: google.maps.StreetViewLibrary;\n  journeySharing: google.maps.JourneySharingLibrary;\n  drawing: google.maps.DrawingLibrary;\n  visualization: google.maps.VisualizationLibrary;\n}\n\nexport function useMapsLibrary<\n  K extends keyof ApiLibraries,\n  V extends ApiLibraries[K]\n>(name: K): V | null;\n\nexport function useMapsLibrary(name: string) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n\n  return ctx?.loadedLibraries[name] || null;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nexport function useMapsEventListener<T extends (...args: any[]) => void>(\n  target?: object | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    const listener = google.maps.event.addListener(target, name, callback);\n\n    return () => listener.remove();\n  }, [target, name, callback]);\n}\n","import {useEffect} from 'react';\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nexport function usePropBinding<T extends object, K extends keyof T>(\n  object: T | null,\n  prop: K,\n  value: T[K]\n) {\n  useEffect(() => {\n    if (!object) return;\n\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to DOM nodes.\n * @internal\n */\nexport function useDomEventListener<T extends (...args: any[]) => void>(\n  target?: Node | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    target.addEventListener(name, callback);\n\n    return () => target.removeEventListener(name, callback);\n  }, [target, name, callback]);\n}\n","/* eslint-disable complexity */\nimport React, {\n  Children,\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState\n} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\n\nimport type {Ref, PropsWithChildren} from 'react';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {usePropBinding} from '../hooks/use-prop-binding';\nimport {useDomEventListener} from '../hooks/use-dom-event-listener';\n\nexport interface AdvancedMarkerContextValue {\n  marker: google.maps.marker.AdvancedMarkerElement;\n}\n\nexport function isAdvancedMarker(\n  marker: google.maps.Marker | google.maps.marker.AdvancedMarkerElement\n): marker is google.maps.marker.AdvancedMarkerElement {\n  return (\n    (marker as google.maps.marker.AdvancedMarkerElement).content !== undefined\n  );\n}\n\nfunction isElementNode(node: Node): node is HTMLElement {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n} as const;\nexport type CollisionBehavior =\n  (typeof CollisionBehavior)[keyof typeof CollisionBehavior];\n\nexport const AdvancedMarkerContext =\n  React.createContext<AdvancedMarkerContextValue | null>(null);\n\n// [xPosition, yPosition] when the top left corner is [0, 0]\nexport const AdvancedMarkerAnchorPoint = {\n  TOP_LEFT: ['0%', '0%'],\n  TOP_CENTER: ['50%', '0%'],\n  TOP: ['50%', '0%'],\n  TOP_RIGHT: ['100%', '0%'],\n  LEFT_CENTER: ['0%', '50%'],\n  LEFT_TOP: ['0%', '0%'],\n  LEFT: ['0%', '50%'],\n  LEFT_BOTTOM: ['0%', '100%'],\n  RIGHT_TOP: ['100%', '0%'],\n  RIGHT: ['100%', '50%'],\n  RIGHT_CENTER: ['100%', '50%'],\n  RIGHT_BOTTOM: ['100%', '100%'],\n  BOTTOM_LEFT: ['0%', '100%'],\n  BOTTOM_CENTER: ['50%', '100%'],\n  BOTTOM: ['50%', '100%'],\n  BOTTOM_RIGHT: ['100%', '100%'],\n  CENTER: ['50%', '50%']\n} as const;\n\nexport type AdvancedMarkerAnchorPoint =\n  (typeof AdvancedMarkerAnchorPoint)[keyof typeof AdvancedMarkerAnchorPoint];\n\ntype AdvancedMarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onMouseEnter?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onMouseLeave?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type AdvancedMarkerProps = PropsWithChildren<\n  Omit<\n    google.maps.marker.AdvancedMarkerElementOptions,\n    'gmpDraggable' | 'gmpClickable' | 'content' | 'map' | 'collisionBehavior'\n  > &\n    AdvancedMarkerEventProps & {\n      draggable?: boolean;\n      clickable?: boolean;\n      collisionBehavior?: CollisionBehavior;\n      /**\n       * The anchor point for the Advanced Marker.\n       * Either use one of the predefined anchor point from the \"AdvancedMarkerAnchorPoint\" export\n       * or provide a string tuple in the form of [\"xPosition\", \"yPosition\"].\n       * The position is measured from the top-left corner and\n       * can be anything that can be consumed by a CSS translate() function.\n       * For example in percent (\"50%\") or in pixels (\"20px\").\n       */\n      anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n      /**\n       * A className for the content element.\n       * (can only be used with HTML Marker content)\n       */\n      className?: string;\n      /**\n       * Additional styles to apply to the content element.\n       */\n      style?: CSSProperties;\n    }\n>;\n\ntype MarkerContentProps = PropsWithChildren & {\n  styles?: CSSProperties;\n  className?: string;\n  anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n};\n\nconst MarkerContent = ({\n  children,\n  styles,\n  className,\n  anchorPoint\n}: MarkerContentProps) => {\n  const [xTranslation, yTranslation] =\n    anchorPoint ?? AdvancedMarkerAnchorPoint['BOTTOM'];\n\n  // The \"translate(50%, 100%)\" is here to counter and reset the default anchoring of the advanced marker element\n  // that comes from the api\n  const transformStyle = `translate(50%, 100%) translate(-${xTranslation}, -${yTranslation})`;\n\n  return (\n    // anchoring container\n    <div style={{transform: transformStyle}}>\n      {/* AdvancedMarker div that user can give styles and classes */}\n      <div className={className} style={styles}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport type CustomMarkerContent =\n  | (HTMLDivElement & {isCustomMarker?: boolean})\n  | null;\n\nexport type AdvancedMarkerRef = google.maps.marker.AdvancedMarkerElement | null;\nfunction useAdvancedMarker(props: AdvancedMarkerProps) {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n  const [contentContainer, setContentContainer] =\n    useState<HTMLDivElement | null>(null);\n\n  const map = useMap();\n  const markerLibrary = useMapsLibrary('marker');\n\n  const {\n    children,\n    onClick,\n    className,\n    onMouseEnter,\n    onMouseLeave,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    clickable,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n\n  const numChildren = Children.count(children);\n\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n\n    setMarker(newMarker);\n\n    // create the container for marker content if there are children\n    let contentElement: CustomMarkerContent = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n\n      // We need some kind of flag to identify the custom marker content\n      // in the infowindow component. Choosing a custom property instead of a className\n      // to not encourage users to style the marker content directly.\n      contentElement.isCustomMarker = true;\n\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n\n    return () => {\n      newMarker.map = null;\n      contentElement?.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n\n  // When no children are present we don't have our own wrapper div\n  // which usually gets the user provided className. In this case\n  // we set the className directly on the marker.content element that comes\n  // with the AdvancedMarker.\n  useEffect(() => {\n    if (!marker || !marker.content || numChildren > 0) return;\n\n    (marker.content as HTMLElement).className = className || '';\n  }, [marker, className, numChildren]);\n\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title ?? '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(\n    marker,\n    'collisionBehavior',\n    collisionBehavior as google.maps.CollisionBehavior\n  );\n\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    if (draggable !== undefined) marker.gmpDraggable = draggable;\n    else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;\n    else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n\n  // set gmpClickable from props (when unspecified, it's true if the onClick or one of\n  // the hover events callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    const gmpClickable =\n      clickable !== undefined ||\n      Boolean(onClick) ||\n      Boolean(onMouseEnter) ||\n      Boolean(onMouseLeave);\n\n    // gmpClickable is only available in beta version of the\n    // maps api (as of 2024-10-10)\n    marker.gmpClickable = gmpClickable;\n\n    // enable pointer events for the markers with custom content\n    if (gmpClickable && marker?.content && isElementNode(marker.content)) {\n      marker.content.style.pointerEvents = 'none';\n\n      if (marker.content.firstElementChild) {\n        (marker.content.firstElementChild as HTMLElement).style.pointerEvents =\n          'all';\n      }\n    }\n  }, [marker, clickable, onClick, onMouseEnter, onMouseLeave]);\n\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n\n  useDomEventListener(marker?.element, 'mouseenter', onMouseEnter);\n  useDomEventListener(marker?.element, 'mouseleave', onMouseLeave);\n\n  return [marker, contentContainer] as const;\n}\n\nexport const AdvancedMarker = forwardRef(\n  (props: AdvancedMarkerProps, ref: Ref<AdvancedMarkerRef>) => {\n    const {children, style, className, anchorPoint} = props;\n    const [marker, contentContainer] = useAdvancedMarker(props);\n\n    const advancedMarkerContextValue: AdvancedMarkerContextValue | null =\n      useMemo(() => (marker ? {marker} : null), [marker]);\n\n    useImperativeHandle(ref, () => marker, [marker]);\n\n    if (!contentContainer) return null;\n\n    return (\n      <AdvancedMarkerContext.Provider value={advancedMarkerContextValue}>\n        {createPortal(\n          <MarkerContent\n            anchorPoint={anchorPoint}\n            styles={style}\n            className={className}>\n            {children}\n          </MarkerContent>,\n          contentContainer\n        )}\n      </AdvancedMarkerContext.Provider>\n    );\n  }\n);\n\nexport function useAdvancedMarkerRef() {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n\n  const refCallback = useCallback((m: AdvancedMarkerRef | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\n * The code in this file was adapted from the internal react-dom-bindings package.\n * https://github.com/facebook/react/tree/4508873393058e86bed308b56e49ec883ece59d1/packages/react-dom-bindings\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {CSSProperties} from 'react';\n\nexport function setValueForStyles(\n  element: HTMLElement,\n  styles: CSSProperties | null,\n  prevStyles: CSSProperties | null\n) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.'\n    );\n  }\n\n  const elementStyle = element.style;\n\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n\n      setValueForStyle(\n        elementStyle,\n        styleName,\n        styles[styleName as keyof CSSProperties]\n      );\n    }\n\n    return;\n  }\n\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (const styleName in prevStyles) {\n    if (\n      prevStyles.hasOwnProperty(styleName) &&\n      (styles == null || !styles.hasOwnProperty(styleName))\n    ) {\n      // Clear style\n      const isCustomProperty = styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(styleName, '');\n      } else if (styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[styleName as any] = '';\n      }\n    }\n  }\n\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n\n  for (const styleName in styles) {\n    const value = styles[styleName as keyof CSSProperties];\n    if (\n      styles.hasOwnProperty(styleName) &&\n      prevStyles[styleName as keyof CSSProperties] !== value\n    ) {\n      setValueForStyle(elementStyle, styleName, value);\n    }\n  }\n}\n\nfunction setValueForStyle(\n  elementStyle: CSSStyleDeclaration,\n  styleName: string,\n  value: unknown\n) {\n  const isCustomProperty = styleName.indexOf('--') === 0;\n\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName as any] = '';\n    }\n  }\n\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value as string);\n  }\n\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isUnitlessNumber(styleName)\n  ) {\n    elementStyle[styleName as any] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value as string;\n    } else {\n      elementStyle[styleName as any] = ('' + value).trim();\n    }\n  }\n}\n\n// CSS properties which accept numbers but are not in units of \"px\".\nconst unitlessNumbers = new Set([\n  'animationIterationCount',\n  'aspectRatio',\n  'borderImageOutset',\n  'borderImageSlice',\n  'borderImageWidth',\n  'boxFlex',\n  'boxFlexGroup',\n  'boxOrdinalGroup',\n  'columnCount',\n  'columns',\n  'flex',\n  'flexGrow',\n  'flexPositive',\n  'flexShrink',\n  'flexNegative',\n  'flexOrder',\n  'gridArea',\n  'gridRow',\n  'gridRowEnd',\n  'gridRowSpan',\n  'gridRowStart',\n  'gridColumn',\n  'gridColumnEnd',\n  'gridColumnSpan',\n  'gridColumnStart',\n  'fontWeight',\n  'lineClamp',\n  'lineHeight',\n  'opacity',\n  'order',\n  'orphans',\n  'scale',\n  'tabSize',\n  'widows',\n  'zIndex',\n  'zoom',\n  'fillOpacity', // SVG-related properties\n  'floodOpacity',\n  'stopOpacity',\n  'strokeDasharray',\n  'strokeDashoffset',\n  'strokeMiterlimit',\n  'strokeOpacity',\n  'strokeWidth'\n]);\nfunction isUnitlessNumber(name: string): boolean {\n  return unitlessNumbers.has(name);\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {createPortal} from 'react-dom';\n\nimport {useMap} from '../hooks/use-map';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {setValueForStyles} from '../libraries/set-value-for-styles';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\nimport {useDeepCompareEffect} from '../libraries/use-deep-compare-effect';\nimport {CustomMarkerContent, isAdvancedMarker} from './advanced-marker';\n\nexport type InfoWindowProps = Omit<\n  google.maps.InfoWindowOptions,\n  'headerContent' | 'content' | 'pixelOffset'\n> & {\n  style?: CSSProperties;\n  className?: string;\n  anchor?: google.maps.Marker | google.maps.marker.AdvancedMarkerElement | null;\n  pixelOffset?: [number, number];\n  shouldFocus?: boolean;\n  onClose?: () => void;\n  onCloseClick?: () => void;\n\n  headerContent?: ReactNode;\n};\n\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nexport const InfoWindow = (props: PropsWithChildren<InfoWindowProps>) => {\n  const {\n    // content options\n    children,\n    headerContent,\n\n    style,\n    className,\n    pixelOffset,\n\n    // open options\n    anchor,\n    shouldFocus,\n\n    // events\n    onClose,\n    onCloseClick,\n\n    // other options\n    ...infoWindowOptions\n  } = props;\n\n  // ## create infowindow instance once the mapsLibrary is available.\n  const mapsLibrary = useMapsLibrary('maps');\n  const [infoWindow, setInfoWindow] = useState<google.maps.InfoWindow | null>(\n    null\n  );\n\n  const contentContainerRef = useRef<HTMLElement | null>(null);\n  const headerContainerRef = useRef<HTMLElement | null>(null);\n\n  useEffect(\n    () => {\n      if (!mapsLibrary) return;\n\n      contentContainerRef.current = document.createElement('div');\n      headerContainerRef.current = document.createElement('div');\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (pixelOffset) {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (headerContent) {\n        // if headerContent is specified as string we can directly forward it,\n        // otherwise we'll pass the element the portal will render into\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      // intentionally shadowing the state variables here\n      const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n      infoWindow.setContent(contentContainerRef.current);\n\n      setInfoWindow(infoWindow);\n\n      // unmount: remove infoWindow and content elements (note: close is called in a different effect-cleanup)\n      return () => {\n        infoWindow.setContent(null);\n\n        contentContainerRef.current?.remove();\n        headerContainerRef.current?.remove();\n\n        contentContainerRef.current = null;\n        headerContainerRef.current = null;\n\n        setInfoWindow(null);\n      };\n    },\n    // `infoWindowOptions` and other props are missing from dependencies:\n    //\n    // We don't want to re-create the infowindow instance\n    // when the options change.\n    // Updating the options is handled in the useEffect below.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [mapsLibrary]\n  );\n\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  const prevStyleRef = useRef<CSSProperties | null>(null);\n  useEffect(() => {\n    if (!infoWindow || !contentContainerRef.current) return;\n\n    setValueForStyles(\n      contentContainerRef.current,\n      style || null,\n      prevStyleRef.current\n    );\n\n    prevStyleRef.current = style || null;\n\n    if (className !== contentContainerRef.current.className)\n      contentContainerRef.current.className = className || '';\n  }, [infoWindow, className, style]);\n\n  // ## update options\n  useDeepCompareEffect(\n    () => {\n      if (!infoWindow) return;\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (!pixelOffset) {\n        opts.pixelOffset = null;\n      } else {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (!headerContent) {\n        opts.headerContent = null;\n      } else {\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      infoWindow.setOptions(infoWindowOptions);\n    },\n\n    // dependency `infoWindow` isn't needed since options are also passed\n    // to the constructor when a new infoWindow is created.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [infoWindowOptions, pixelOffset, headerContent]\n  );\n\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n\n  // ## open info window when content and map are available\n  const map = useMap();\n  useEffect(() => {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!map || !infoWindow || anchor === null) return;\n\n    const isOpenedWithAnchor = !!anchor;\n    const openOptions: google.maps.InfoWindowOpenOptions = {map};\n    if (anchor) {\n      openOptions.anchor = anchor;\n\n      // Only do the infowindow adjusting when dealing with an AdvancedMarker\n      if (isAdvancedMarker(anchor) && anchor.content instanceof Element) {\n        const wrapper = anchor.content as CustomMarkerContent;\n        const wrapperBcr = wrapper?.getBoundingClientRect();\n\n        // This checks whether or not the anchor has custom content with our own\n        // div wrapper. If not, that means we have a regular AdvancedMarker without any children.\n        // In that case we do not want to adjust the infowindow since it is all handled correctly\n        // by the Google Maps API.\n        if (wrapperBcr && wrapper?.isCustomMarker) {\n          // We can safely typecast here since we control that element and we know that\n          // it is a div\n          const anchorDomContent = anchor.content.firstElementChild\n            ?.firstElementChild as Element;\n\n          const contentBcr = anchorDomContent?.getBoundingClientRect();\n\n          // center infowindow above marker\n          const anchorOffsetX =\n            contentBcr.x -\n            wrapperBcr.x +\n            (contentBcr.width - wrapperBcr.width) / 2;\n          const anchorOffsetY = contentBcr.y - wrapperBcr.y;\n\n          const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n\n          opts.pixelOffset = new google.maps.Size(\n            pixelOffset ? pixelOffset[0] + anchorOffsetX : anchorOffsetX,\n            pixelOffset ? pixelOffset[1] + anchorOffsetY : anchorOffsetY\n          );\n\n          infoWindow.setOptions(opts);\n        }\n      }\n    }\n\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n\n    infoWindow.open(openOptions);\n\n    return () => {\n      // Note: when the infowindow has an anchor, it will automatically show up again when the\n      // anchor was removed from the map before infoWindow.close() is called but the it gets\n      // added back to the map after that.\n      // More information here: https://issuetracker.google.com/issues/343750849\n      if (isOpenedWithAnchor) infoWindow.set('anchor', null);\n\n      infoWindow.close();\n    };\n  }, [infoWindow, anchor, map, shouldFocus, infoWindowOptions, pixelOffset]);\n\n  return (\n    <>\n      {contentContainerRef.current &&\n        createPortal(children, contentContainerRef.current)}\n\n      {headerContainerRef.current !== null &&\n        createPortal(headerContent, headerContainerRef.current)}\n    </>\n  );\n};\n","import {useEffect, useMemo} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\n\nimport type {PropsWithChildren} from 'react';\n\ntype MapControlProps = PropsWithChildren<{\n  position: ControlPosition;\n}>;\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n} as const;\nexport type ControlPosition =\n  (typeof ControlPosition)[keyof typeof ControlPosition];\n\nexport const MapControl = ({children, position}: MapControlProps) => {\n  const controlContainer = useMemo(() => document.createElement('div'), []);\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) return;\n\n    const controls = map.controls[position];\n\n    controls.push(controlContainer);\n\n    return () => {\n      const controlsArray = controls.getArray();\n      // controlsArray could be undefined if the map is in an undefined state (e.g. invalid API-key, see #276\n      if (!controlsArray) return;\n\n      const index = controlsArray.indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [controlContainer, map, position]);\n\n  return createPortal(children, controlContainer);\n};\n","/* eslint-disable complexity */\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react';\n\nimport {useMap} from '../hooks/use-map';\n\nimport type {Ref} from 'react';\n\ntype MarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type MarkerProps = Omit<google.maps.MarkerOptions, 'map'> &\n  MarkerEventProps;\n\nexport type MarkerRef = Ref<google.maps.Marker | null>;\n\nfunction useMarker(props: MarkerProps) {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n  const map = useMap();\n\n  const {\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut,\n    ...markerOptions\n  } = props;\n\n  const {position, draggable} = markerOptions;\n\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined)\n        console.error('<Marker> has to be inside a Map component.');\n\n      return;\n    }\n\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n\n    const m = marker;\n\n    // Add event listeners\n    const gme = google.maps.event;\n\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n\n    marker.setDraggable(Boolean(draggable));\n\n    return () => {\n      gme.clearInstanceListeners(m);\n    };\n  }, [\n    marker,\n    draggable,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut\n  ]);\n\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n\n  return marker;\n}\n\n/**\n * Component to render a marker on a map\n */\nexport const Marker = forwardRef((props: MarkerProps, ref: MarkerRef) => {\n  const marker = useMarker(props);\n\n  useImperativeHandle(ref, () => marker, [marker]);\n\n  return <></>;\n});\n\nexport function useMarkerRef() {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n\n  const refCallback = useCallback((m: google.maps.Marker | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","import {\n  Children,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo\n} from 'react';\nimport {AdvancedMarkerContext} from './advanced-marker';\nimport {createPortal} from 'react-dom';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Props for the Pin component\n */\nexport type PinProps = google.maps.marker.PinElementOptions;\n\n/**\n * Component to configure the appearance of an AdvancedMarker\n */\nexport const Pin = (props: PropsWithChildren<PinProps>) => {\n  const advancedMarker = useContext(AdvancedMarkerContext)?.marker;\n  const glyphContainer = useMemo(() => document.createElement('div'), []);\n\n  // Create Pin View instance\n  useEffect(() => {\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error(\n          'The <Pin> component can only be used inside <AdvancedMarker>.'\n        );\n      }\n\n      return;\n    }\n\n    if (props.glyph && props.children) {\n      logErrorOnce(\n        'The <Pin> component only uses children to render the glyph if both the glyph property and children are present.'\n      );\n    }\n\n    if (Children.count(props.children) > 1) {\n      logErrorOnce(\n        'Passing multiple children to the <Pin> component might lead to unexpected results.'\n      );\n    }\n\n    const pinViewOptions: google.maps.marker.PinElementOptions = {\n      ...props\n    };\n\n    const pinElement = new google.maps.marker.PinElement(pinViewOptions);\n\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n\n    // Set content of Advanced Marker View to the Pin View element\n    // Here we are selecting the anchor container.\n    // The hierarchy is as follows:\n    // \"advancedMarker.content\" (from google) -> \"pointer events reset div\" -> \"anchor container\"\n    const markerContent = advancedMarker.content?.firstChild?.firstChild;\n\n    while (markerContent?.firstChild) {\n      markerContent.removeChild(markerContent.firstChild);\n    }\n\n    if (markerContent) {\n      markerContent.appendChild(pinElement.element);\n    }\n  }, [advancedMarker, glyphContainer, props]);\n\n  return createPortal(props.children, glyphContainer);\n};\n","const mapLinear = (x: number, a1: number, a2: number, b1: number, b2: number) =>\n  b1 + ((x - a1) * (b2 - b1)) / (a2 - a1);\n\nconst getMapMaxTilt = (zoom: number) => {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n\n/**\n * Function to limit the tilt range of the Google map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const limitTiltRange = ({viewState}: any) => {\n  const pitch = viewState.pitch;\n  const gmZoom = viewState.zoom + 1;\n  const maxTilt = getMapMaxTilt(gmZoom);\n\n  return {...viewState, fovy: 25, pitch: Math.min(maxTilt, pitch)};\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,gBAAgB,GAAG;EAC9BC,UAAU,EAAE,YAAY;EACxBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE;;ACUhB,MAAMC,iBAAiB,GAAG,yCAAyC;AAEnE;;;;;AAKG;MACUC,mBAAmB;EAgB9B;;;;;;;;AAQG;EACH,aAAaC,IAAIA,CACfC,MAAiB,EACjBC,qBAAyD;IAAA,IAAAC,cAAA;IAEzD,MAAMC,SAAS,GAAGH,MAAM,CAACG,SAAS,GAAGH,MAAM,CAACG,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;IACrE,MAAMC,gBAAgB,GAAG,IAAI,CAACC,eAAe,CAACN,MAAM,CAAC;IAErD,IAAI,CAACO,SAAS,CAACC,IAAI,CAACP,qBAAqB,CAAC;IAE1C;IACA;IACA;IACA;IACA;IAEA,KAAAC,cAAA,GAAIO,MAAM,CAACC,MAAM,cAAAR,cAAA,GAAbA,cAAA,CAAeS,IAAI,aAAnBT,cAAA,CAAqBU,aAAwB,EAAE;MACjD;MACA,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;QAC7B,IAAI,CAACC,aAAa,GAAGvB,gBAAgB,CAACG,MAAM;MAC9C;MACA,IAAI,CAACqB,4BAA4B,EAAE;IACrC,CAAC,MAAM;MACL,IAAI,CAACF,mBAAmB,GAAGR,gBAAgB;MAC3C,IAAI,CAACW,iBAAiB,CAAChB,MAAM,CAAC;IAChC;IAEA,IACE,IAAI,CAACa,mBAAmB,IACxB,IAAI,CAACA,mBAAmB,KAAKR,gBAAgB,EAC7C;MACAY,OAAO,CAACC,IAAI,CACV,gEAAgE,GAC9D,sEAAsE,GACtE,qCAAqC,CACxC;IACH;IAEA,MAAMC,eAAe,GAAG,CAAC,MAAM,EAAE,GAAGhB,SAAS,CAAC;IAC9C,MAAMiB,OAAO,CAACC,GAAG,CACfF,eAAe,CAACG,GAAG,CAACC,IAAI,IAAIb,MAAM,CAACC,IAAI,CAACC,aAAa,CAACW,IAAI,CAAC,CAAC,CAC7D;EACH;EAEA;;AAEG;EACK,OAAOjB,eAAeA,CAACN,MAAiB;IAC9C,OAAO,CACLA,MAAM,CAACwB,CAAC,EACRxB,MAAM,CAACyB,GAAG,EACVzB,MAAM,CAAC0B,QAAQ,EACf1B,MAAM,CAAC2B,MAAM,EACb3B,MAAM,CAAC4B,kBAAkB,EACzB5B,MAAM,CAAC6B,eAAe,CACvB,CAACC,IAAI,CAAC,GAAG,CAAC;EACb;EAEA;;;;;;;;;;AAUG;EACK,OAAOd,iBAAiBA,CAAChB,MAAiB;IAChD,IAAI,CAACS,MAAM,CAACC,MAAM,EAAED,MAAM,CAACC,MAAM,GAAG,EAAW;IAC/C,IAAI,CAACD,MAAM,CAACC,MAAM,CAACC,IAAI,EAAEF,MAAM,CAACC,MAAM,CAACC,IAAI,GAAG,EAAW;IAEzD,IAAIF,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;MACvCM,OAAO,CAACc,KAAK,CACX,+EAA+E,CAChF;MAED;IACF;IAEA,IAAIC,UAAU,GAAyB,IAAI;IAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAK;MACnB,IAAID,UAAU,EAAE,OAAOA,UAAU;MAEjCA,UAAU,GAAG,IAAIZ,OAAO,CAAC,CAACc,OAAO,EAAEC,MAAM,KAAI;QAAA,IAAAC,qBAAA;QAC3C,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QACtD,MAAMC,SAAS,GAAG,IAAIC,eAAe,EAAE;QAEvC,KAAK,MAAM,CAAChB,GAAG,EAAEiB,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAC5C,MAAM,CAAC,EAAE;UACjD,MAAM6C,YAAY,GAAGpB,GAAG,CAACqB,OAAO,CAC9B,QAAQ,EACRC,CAAC,IAAI,GAAG,GAAGA,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,CAC9B;UACDR,SAAS,CAACS,GAAG,CAACJ,YAAY,EAAEK,MAAM,CAACR,KAAK,CAAC,CAAC;QAC5C;QACAF,SAAS,CAACS,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;QACjCT,SAAS,CAACS,GAAG,CAAC,UAAU,EAAE,wBAAwB,CAAC;QAEnDZ,aAAa,CAACc,KAAK,GAAG,IAAI;QAC1Bd,aAAa,CAACe,GAAG,GAAGvD,iBAAiB,GAAG,GAAG,GAAG2C,SAAS,CAACa,QAAQ,EAAE;QAClEhB,aAAa,CAACiB,KAAK,GAChB,EAAAlB,qBAAA,GAAAE,QAAQ,CAACiB,aAAa,CAAC,eAAe,CAAuB,qBAA7DnB,qBAAA,CACGkB,KAAK,KAAI,EAAE;QAEjBjB,aAAa,CAACmB,OAAO,GAAG,MAAK;UAC3B,IAAI,CAAC1C,aAAa,GAAGvB,gBAAgB,CAACI,MAAM;UAC5C,IAAI,CAACoB,4BAA4B,EAAE;UACnCoB,MAAM,CAAC,IAAIsB,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACpE;QAEDhD,MAAM,CAACiD,sBAAsB,GAAG,MAAK;UACnC,IAAI,CAAC5C,aAAa,GAAGvB,gBAAgB,CAACG,MAAM;UAC5C,IAAI,CAACqB,4BAA4B,EAAE;UACnCmB,OAAO,EAAE;SACV;QAEDzB,MAAM,CAACkD,cAAc,GAAG,MAAK;UAC3B,IAAI,CAAC7C,aAAa,GAAGvB,gBAAgB,CAACK,YAAY;UAClD,IAAI,CAACmB,4BAA4B,EAAE;SACpC;QAED,IAAI,CAACD,aAAa,GAAGvB,gBAAgB,CAACE,OAAO;QAC7C,IAAI,CAACsB,4BAA4B,EAAE;QAEnCuB,QAAQ,CAACsB,IAAI,CAACC,MAAM,CAACxB,aAAa,CAAC;MACrC,CAAC,CAAC;MAEF,OAAOL,UAAU;KAClB;IAED;IACA;IACAtB,MAAM,CAACC,IAAI,CAACC,aAAa,GAAGkD,WAAW,IACrC7B,OAAO,EAAE,CAAC8B,IAAI,CAAC,MAAMrD,MAAM,CAACC,IAAI,CAACC,aAAa,CAACkD,WAAW,CAAC,CAAC;EAChE;EAEA;;AAEG;EACK,OAAO/C,4BAA4BA,CAAA;IACzC,KAAK,MAAMiD,EAAE,IAAI,IAAI,CAACzD,SAAS,EAAE;MAC/ByD,EAAE,CAAC,IAAI,CAAClD,aAAa,CAAC;IACxB;EACF;;AAxKA;;AAEG;AAHQhB,mBAAmB,CAIhBgB,aAAa,GAAqBvB,gBAAgB,CAACC,UAAU;AAE3E;;AAEG;AARQM,mBAAmB,CAShBe,mBAAmB;AAEjC;;AAEG;AAbQf,mBAAmB,CAcfS,SAAS,GAA4B,EAAE;;;ACPxD,MAAM0D,wBAAwB,GAAG,iCAAiC;AAE3D,MAAMC,kBAAkB,GAC7BC,KAAK,CAACC,aAAa,CAAiC,IAAI;AA4D1D;;AAEG;AACH,SAASC,eAAeA,CAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAE9C,EAAE,CAAC;EAEL,MAAMC,cAAc,GAAGA,CAACC,WAA4B,EAAEC,EAAE,GAAG,SAAS,KAAI;IACtEJ,eAAe,CAACK,SAAS,IAAAC,QAAA,KAASD,SAAS;MAAE,CAACD,EAAE,GAAGD;IAAW,EAAE,CAAC;GAClE;EAED,MAAMI,iBAAiB,GAAGA,CAACH,EAAE,GAAG,SAAS,KAAI;IAC3C;IACAJ,eAAe,CAACQ,IAAA;MAAA,IAAcC,SAAS,GAAAC,6BAAA,CAAAF,IAAA,GAApBJ,EAAE,EAAArD,GAAA,CAAA4D,cAAA;MAAA,OAAwBF,SAAS;KAAC;GACxD;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAK;IAC7BZ,eAAe,CAAC,EAAE,CAAC;GACpB;EAED,OAAO;IAACD,YAAY;IAAEG,cAAc;IAAEK,iBAAiB;IAAEK;GAAkB;AAC7E;AAEA;;;AAGG;AACH,SAASC,sBAAsBA,CAACC,KAAuB;EACrD,MAAM;MACJC,MAAM;MACNC,OAAO;MACPC,MAAM;MACNC,OAAO;MACPtF,SAAS,GAAG;IAEb,IAAGkF,KAAK;IADJK,cAAc,GAAAT,6BAAA,CACfI,KAAK,EAAAM,WAAA;EAET,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAClC1E,mBAAmB,CAACgB,aAAa,CAClC;EACD,MAAM,CAACgF,eAAe,EAAEC,gBAAgB,CAAC,GAAGC,UAAU,CACpD,CACEF,eAAgC,EAChCG,MAAqE,KACnE;IACF,OAAOH,eAAe,CAACG,MAAM,CAAC1E,IAAI,CAAC,GAC/BuE,eAAe,GAAAjB,QAAA,KACXiB,eAAe;MAAE,CAACG,MAAM,CAAC1E,IAAI,GAAG0E,MAAM,CAACvD;KAAM;GACtD,EACD,EAAE,CACH;EAED,MAAMwD,eAAe,GAAGC,OAAO,CAAC,MAAMhG,SAAS,IAAT,gBAAAA,SAAS,CAAE2B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC3B,SAAS,CAAC,CAAC;EACxE,MAAME,gBAAgB,GAAG8F,OAAO,CAC9B,MAAMC,IAAI,CAACC,SAAS,CAAAxB,QAAA;IAAEW,MAAM;IAAEC;GAAY,EAAAC,cAAc,CAAC,CAAC,EAC1D,CAACF,MAAM,EAAEC,OAAO,EAAEC,cAAc,CAAC,CAClC;EAED,MAAM9E,aAAa,GAAqC0F,WAAW,CACjE,MAAO/E,IAAY,IAAI;IAAA,IAAAgF,OAAA;IACrB,IAAIT,eAAe,CAACvE,IAAI,CAAC,EAAE;MACzB,OAAOuE,eAAe,CAACvE,IAAI,CAAC;IAC9B;IAEA,IAAI,GAAAgF,OAAA,GAAC7F,MAAM,cAAA6F,OAAA,GAANA,OAAA,CAAQ5F,IAAI,aAAZ4F,OAAA,CAAc3F,aAAa,CAAE;MAChC,MAAM,IAAI6C,KAAK,CACb,0DAA0D,GACxD,wCAAwC,CAC3C;IACH;IAEA,MAAM+C,GAAG,GAAG,MAAM/F,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,aAAa,CAACW,IAAI,CAAC;IACxDwE,gBAAgB,CAAC;MAACxE,IAAI;MAAEmB,KAAK,EAAE8D;IAAI,EAAC;IAEpC,OAAOA,GAAG;EACZ,CAAC,EACD,CAACV,eAAe,CAAC,CAClB;EAEDW,SAAS,CACP,MAAK;IACH,CAAC,YAAW;MACV,IAAI;QACF,MAAMzG,MAAM,GAAA6E,QAAA;UAAepD,GAAG,EAAE+D;QAAM,GAAKE,cAAc,CAAC;QAC1D,IAAID,OAAO,EAAEzF,MAAM,CAACwB,CAAC,GAAGiE,OAAO;QAC/B,IAAI,CAAAS,eAAe,IAAf,gBAAAA,eAAe,CAAEQ,MAAM,IAAG,CAAC,EAAE1G,MAAM,CAACG,SAAS,GAAG+F,eAAe;QAEnE,IACElG,MAAM,CAAC2G,OAAO,KAAKC,SAAS,IAC5B5G,MAAM,CAAC2G,OAAO,GAAG,CAAC,IAClB3G,MAAM,CAAC2G,OAAO,GAAG,GAAG,EAEpB,OAAO3G,MAAM,CAAC2G,OAAO;QAEvB,IAAI3G,MAAM,CAAC6B,eAAe,KAAK+E,SAAS,EACtC5G,MAAM,CAAC6B,eAAe,GAAGoC,wBAAwB,CAAC,KAC/C,IAAIjE,MAAM,CAAC6B,eAAe,KAAK,EAAE,EAAE,OAAO7B,MAAM,CAAC6B,eAAe;QAErE,MAAM/B,mBAAmB,CAACC,IAAI,CAACC,MAAM,EAAE4F,MAAM,IAAIC,SAAS,CAACD,MAAM,CAAC,CAAC;QAEnE,KAAK,MAAMrE,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,GAAGpB,SAAS,CAAC,EAAE;UACjD,MAAMS,aAAa,CAACW,IAAI,CAAC;QAC3B;QAEA,IAAI+D,MAAM,EAAE;UACVA,MAAM,EAAE;QACV;OACD,CAAC,OAAOvD,KAAK,EAAE;QACd,IAAIwD,OAAO,EAAE;UACXA,OAAO,CAACxD,KAAK,CAAC;QAChB,CAAC,MAAM;UACLd,OAAO,CAACc,KAAK,CACX,6DAA6D,EAC7DA,KAAK,CACN;QACH;MACF;IACF,CAAC,GAAG;GACL;EACD;EACA,CAACyD,MAAM,EAAEU,eAAe,EAAE7F,gBAAgB,CAAC,CAC5C;EAED,OAAO;IACLuF,MAAM;IACNE,eAAe;IACflF;GACD;AACH;AAEA;;AAEG;AACU,MAAAiG,WAAW,GACtBxB,KAA0C,IACnB;EACvB,MAAM;MAACyB;IAAyB,IAAGzB,KAAK;IAApB0B,WAAW,GAAA9B,6BAAA,CAAII,KAAK,EAAA2B,YAAA;EACxC,MAAM;IAAC1C,YAAY;IAAEG,cAAc;IAAEK,iBAAiB;IAAEK;GAAkB,GACxEd,eAAe,EAAE;EAEnB,MAAM;IAACuB,MAAM;IAAEE,eAAe;IAAElF;EAAc,IAC5CwE,sBAAsB,CAAC2B,WAAW,CAAC;EAErC,MAAME,YAAY,GAA4Bd,OAAO,CACnD,OAAO;IACL7B,YAAY;IACZG,cAAc;IACdK,iBAAiB;IACjBK,iBAAiB;IACjBS,MAAM;IACNE,eAAe;IACflF;EACD,EAAC,EACF,CACE0D,YAAY,EACZG,cAAc,EACdK,iBAAiB,EACjBK,iBAAiB,EACjBS,MAAM,EACNE,eAAe,EACflF,aAAa,CACd,CACF;EAED,oBACEuD,KAAA,CAAA5B,aAAA,CAAC2B,kBAAkB,CAACgD,QAAQ;IAACxE,KAAK,EAAEuE;EAAa,GAC9CH,QAC0B,CAAC;AAElC;;AClOA;;;AAGG;AACa,SAAAK,YAAYA,CAC1B7F,GAA2B,EAC3B+D,KAAoB;EAEpB;EACA;EACA;EACA;EAEA,KAAK,MAAM+B,QAAQ,IAAIC,cAAc,EAAE;IACrC;IACA;IACA,MAAMC,OAAO,GAAGjC,KAAK,CAAC+B,QAAQ,CAA2B;IACzD,MAAMG,SAAS,GAAGC,mBAAmB,CAACJ,QAAQ,CAAC;IAE/C;IACAX,SAAS,CAAC,MAAK;MACb,IAAI,CAACnF,GAAG,EAAE;MACV,IAAI,CAACgG,OAAO,EAAE;MAEd,MAAMG,QAAQ,GAAG/G,MAAM,CAACC,IAAI,CAAC+G,KAAK,CAACC,WAAW,CAC5CrG,GAAG,EACHiG,SAAS,EACRK,EAA2D,IAAI;QAC9DN,OAAO,CAACO,cAAc,CAACN,SAAS,EAAEjG,GAAG,EAAEsG,EAAE,CAAC,CAAC;MAC7C,CAAC,CACF;MAED,OAAO,MAAMH,QAAQ,CAACK,MAAM,EAAE;KAC/B,EAAE,CAACxG,GAAG,EAAEiG,SAAS,EAAED,OAAO,CAAC,CAAC;EAC/B;AACF;AAEA;;;;;AAKG;AACH,SAASO,cAAcA,CACrBE,IAAY,EACZzG,GAAoB,EACpB0G,QAAiE;EAEjE,MAAMJ,EAAE,GAAa;IACnBG,IAAI;IACJzG,GAAG;IACH2G,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAEA,CAAA,KAAK;GACZ;EAED,IAAIC,gBAAgB,CAACC,QAAQ,CAACN,IAAI,CAAC,EAAE;IACnC,MAAMO,QAAQ,GAAGV,EAA2B;IAE5C,MAAMW,MAAM,GAAGjH,GAAG,CAACkH,SAAS,EAAE;IAC9B,MAAMC,IAAI,GAAGnH,GAAG,CAACoH,OAAO,EAAE;IAC1B,MAAMC,OAAO,GAAGrH,GAAG,CAACsH,UAAU,EAAE,IAAI,CAAC;IACrC,MAAMC,IAAI,GAAGvH,GAAG,CAACwH,OAAO,EAAE,IAAI,CAAC;IAC/B,MAAMC,MAAM,GAAGzH,GAAG,CAAC0H,SAAS,EAAE;IAE9B,IAAI,CAACT,MAAM,IAAI,CAACQ,MAAM,IAAI,CAACE,MAAM,CAACC,QAAQ,CAACT,IAAI,CAAC,EAAE;MAChDxH,OAAO,CAACC,IAAI,CACV,wDAAwD,GACtD,6DAA6D,GAC7D,0EAA0E,CAC7E;IACH;IAEAoH,QAAQ,CAACL,MAAM,GAAG;MAChBM,MAAM,EAAE,CAAAA,MAAM,oBAANA,MAAM,CAAEY,MAAM,EAAE,KAAI;QAACC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;OAAE;MAC5CZ,IAAI,EAAGA,IAAe,IAAI,CAAC;MAC3BE,OAAO,EAAEA,OAAiB;MAC1BE,IAAI,EAAEA,IAAc;MACpBE,MAAM,EAAE,CAAAA,MAAM,oBAANA,MAAM,CAAEI,MAAM,EAAE,KAAI;QAC1BG,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,GAAG;QACTC,KAAK,EAAE,CAAC,EAAE;QACVC,IAAI,EAAE,CAAC;MACR;KACF;IAED,OAAOnB,QAAQ;GAChB,MAAM,IAAIoB,eAAe,CAACrB,QAAQ,CAACN,IAAI,CAAC,EAAE;IAAA,IAAA4B,gBAAA;IACzC,IAAI,CAAC3B,QAAQ,EACX,MAAM,IAAIvE,KAAK,CAAC,oDAAoD,CAAC;IACvE,MAAMmG,UAAU,GAAGhC,EAAmB;IAEtCgC,UAAU,CAACC,QAAQ,GAAG7B,QAAQ,CAAC6B,QAAQ;IACvCD,UAAU,CAAC1B,SAAS,GAAG,IAAI;IAC3B0B,UAAU,CAACzB,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,EAAE;IAEvCyB,UAAU,CAAC3B,MAAM,GAAG;MAClB6B,MAAM,EAAE,EAAAH,gBAAA,GAAA3B,QAAQ,CAAC8B,MAAM,KAAf,gBAAAH,gBAAA,CAAiBR,MAAM,EAAE,KAAI,IAAI;MACzCY,OAAO,EAAG/B,QAAuC,CAAC+B;KACnD;IAED,OAAOH,UAAU;EACnB;EAEA,OAAOhC,EAAE;AACX;AAEA;;;AAGG;AACH,MAAMJ,mBAAmB,GAAsD;EAC7EwC,eAAe,EAAE,gBAAgB;EACjCC,eAAe,EAAE,gBAAgB;EACjCC,OAAO,EAAE,OAAO;EAChBC,aAAa,EAAE,aAAa;EAC5BC,UAAU,EAAE,UAAU;EACtBC,MAAM,EAAE,MAAM;EACdC,SAAS,EAAE,SAAS;EACpBC,WAAW,EAAE,WAAW;EACxBC,gBAAgB,EAAE,iBAAiB;EACnCC,MAAM,EAAE,MAAM;EACdC,gCAAgC,EAAE,iCAAiC;EACnEC,wBAAwB,EAAE,yBAAyB;EACnDC,kBAAkB,EAAE,mBAAmB;EACvCC,WAAW,EAAE,WAAW;EACxBC,UAAU,EAAE,UAAU;EACtBC,WAAW,EAAE,WAAW;EACxBC,mBAAmB,EAAE,oBAAoB;EACzCC,sBAAsB,EAAE,uBAAuB;EAC/CC,aAAa,EAAE,aAAa;EAC5BC,aAAa,EAAE,cAAc;EAC7BC,aAAa,EAAE,cAAc;EAE7B;EACA;EACA;EACAC,eAAe,EAAE;CACT;AAEV,MAAMjD,gBAAgB,GAAG,CACvB,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,cAAc,EACd,cAAc,CACf;AAED,MAAMsB,eAAe,GAAG,CACtB,OAAO,EACP,aAAa,EACb,UAAU,EACV,WAAW,EACX,UAAU,EACV,WAAW,CACZ;AAGD,MAAMrC,cAAc,GAAG1E,MAAM,CAAC2I,IAAI,CAAC9D,mBAAmB,CAAuB;AChM7D,SAAA+D,oBAAoBA,CAClCC,MAAsB,EACtBC,IAAoB;EAEpB,MAAMC,GAAG,GAAGC,MAAM,CAA6B/E,SAAS,CAAC;EAEzD,IAAI,CAAC8E,GAAG,CAACE,OAAO,IAAI,CAACC,WAAW,CAACJ,IAAI,EAAEC,GAAG,CAACE,OAAO,CAAC,EAAE;IACnDF,GAAG,CAACE,OAAO,GAAGH,IAAI;EACpB;EAEA;EACAhF,SAAS,CAAC+E,MAAM,EAAEE,GAAG,CAACE,OAAO,CAAC;AAChC;ACZA,MAAME,aAAa,GAAsC,IAAIC,GAAG,CAAC,CAC/D,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,kBAAkB,EAClB,wBAAwB,EACxB,WAAW,EACX,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,0BAA0B,EAC1B,iBAAiB,EACjB,2BAA2B,EAC3B,yBAAyB,EACzB,mBAAmB,EACnB,gBAAgB,EAChB,uBAAuB,EACvB,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,YAAY,EACZ,mBAAmB,EACnB,aAAa,EACb,eAAe,EACf,sBAAsB,EACtB,cAAc,EACd,qBAAqB,EACrB,aAAa,EACb,YAAY,EACZ,mBAAmB,EACnB,0BAA0B,EAC1B,QAAQ,EACR,wBAAwB,EACxB,aAAa,EACb,oBAAoB,CACrB,CAAC;AAEF;;;;;;AAMG;AACa,SAAAC,aAAaA,CAAC1K,GAA2B,EAAE2K,QAAkB;EAC3E;;;;;AAKG;EAEH,MAAMC,UAAU,GAA2B,EAAE;EAC7C,MAAMZ,IAAI,GAAG3I,MAAM,CAAC2I,IAAI,CAACW,QAAQ,CAAqC;EACtE,KAAK,MAAMxK,GAAG,IAAI6J,IAAI,EAAE;IACtB,IAAI,CAACQ,aAAa,CAACK,GAAG,CAAC1K,GAAG,CAAC,EAAE;IAE7ByK,UAAU,CAACzK,GAAG,CAAC,GAAGwK,QAAQ,CAACxK,GAAG,CAAU;EAC1C;EAEA;EACA;EACA;EACA;EACA8J,oBAAoB,CAAC,MAAK;IACxB,IAAI,CAACjK,GAAG,EAAE;IAEVA,GAAG,CAAC8K,UAAU,CAACF,UAAU,CAAC;EAC5B,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChB;AACF;SCtEgBG,mBAAmBA,CAAA;EAAA,IAAAC,WAAA;EACjC,OAAO,EAAAA,WAAA,GAAAC,UAAU,CAACrI,kBAAkB,CAAC,KAA9B,gBAAAoI,WAAA,CAAgC1G,MAAM,KAAIrG,gBAAgB,CAACC,UAAU;AAC9E;;ACWA;;;AAGG;AACa,SAAAgN,qBAAqBA,CACnClL,GAA2B,EAC3B+D,KAAwB;EAExB,MAAM;IAACoH,QAAQ;IAAEC;EAAU,IAAGrH,KAAK;EACnC,MAAMsH,kBAAkB,GAAG,CAAC,CAACF,QAAQ;EAErCG,eAAe,CAAC,MAAK;IACnB,IAAI,CAACtL,GAAG,IAAI,CAACoL,SAAS,EAAE;IAExB,MAAM;MACJG,QAAQ;MACRC,SAAS;MACTC,OAAO,EAAEpE,OAAO;MAChBqE,KAAK,EAAEnE,IAAI;MACXJ;IACD,IAAGiE,SAAmC;IAEvCpL,GAAG,CAAC2L,UAAU,CAAC;MACb1E,MAAM,EAAE;QAACa,GAAG,EAAEyD,QAAQ;QAAExD,GAAG,EAAEyD;OAAU;MACvCnE,OAAO;MACPE,IAAI;MACJJ,IAAI,EAAEA,IAAI,GAAG;IACd,EAAC;EACJ,CAAC,EAAE,CAACnH,GAAG,EAAEoL,SAAS,CAAC,CAAC;EAEpB,OAAOC,kBAAkB;AAC3B;AChDM,SAAUO,eAAeA,CAC7BC,GAAY;EAEZ,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAO,KAAK;EACjD,IAAI,EAAE,KAAK,IAAIA,GAAG,IAAI,KAAK,IAAIA,GAAG,CAAC,EAAE,OAAO,KAAK;EAEjD,OAAOlE,MAAM,CAACC,QAAQ,CAACiE,GAAG,CAAC/D,GAAG,CAAC,IAAIH,MAAM,CAACC,QAAQ,CAACiE,GAAG,CAAC9D,GAAG,CAAC;AAC7D;AAEgB,SAAA+D,YAAYA,CAC1BC,CAAoE,EACpEC,CAAoE;EAEpE,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE,OAAO,KAAK;EAC1B,MAAMC,CAAC,GAAGC,eAAe,CAACH,CAAC,CAAC;EAC5B,MAAMI,CAAC,GAAGD,eAAe,CAACF,CAAC,CAAC;EAC5B,IAAIC,CAAC,CAACnE,GAAG,KAAKqE,CAAC,CAACrE,GAAG,IAAImE,CAAC,CAAClE,GAAG,KAAKoE,CAAC,CAACpE,GAAG,EAAE,OAAO,KAAK;EACpD,OAAO,IAAI;AACb;AAEM,SAAUmE,eAAeA,CAC7BL,GAAmD;EAEnD,IAAID,eAAe,CAACC,GAAG,CAAC,EAAE,OAAOA,GAAG;EAEpC,OAAOA,GAAG,CAAChE,MAAM,EAAE;AACrB;SCrBgBuE,kBAAkBA,CAChCpM,GAA2B,EAC3BqM,cAA8B,EAC9B1B,QAAkB;EAElB,MAAM1D,MAAM,GAAG0D,QAAQ,CAAC1D,MAAM,GAAGiF,eAAe,CAACvB,QAAQ,CAAC1D,MAAM,CAAC,GAAG,IAAI;EAExE,IAAIa,GAAG,GAAkB,IAAI;EAC7B,IAAIC,GAAG,GAAkB,IAAI;EAE7B,IAAId,MAAM,IAAIU,MAAM,CAACC,QAAQ,CAACX,MAAM,CAACa,GAAG,CAAC,IAAIH,MAAM,CAACC,QAAQ,CAACX,MAAM,CAACc,GAAG,CAAC,EAAE;IACxED,GAAG,GAAGb,MAAM,CAACa,GAAa;IAC1BC,GAAG,GAAGd,MAAM,CAACc,GAAa;EAC5B;EAEA,MAAMZ,IAAI,GAAkBQ,MAAM,CAACC,QAAQ,CAAC+C,QAAQ,CAACxD,IAAI,CAAC,GACrDwD,QAAQ,CAACxD,IAAe,GACzB,IAAI;EACR,MAAME,OAAO,GAAkBM,MAAM,CAACC,QAAQ,CAAC+C,QAAQ,CAACtD,OAAO,CAAC,GAC3DsD,QAAQ,CAACtD,OAAkB,GAC5B,IAAI;EACR,MAAME,IAAI,GAAkBI,MAAM,CAACC,QAAQ,CAAC+C,QAAQ,CAACpD,IAAI,CAAC,GACrDoD,QAAQ,CAACpD,IAAe,GACzB,IAAI;EAER;EACA;EACA;EACA;EAEA+D,eAAe,CAAC,MAAK;IACnB,IAAI,CAACtL,GAAG,EAAE;IAEV,MAAMsM,UAAU,GAA8B,EAAE;IAChD,IAAIC,WAAW,GAAG,KAAK;IAEvB,IACEzE,GAAG,KAAK,IAAI,IACZC,GAAG,KAAK,IAAI,KACXsE,cAAc,CAAC/B,OAAO,CAACrD,MAAM,CAACa,GAAG,KAAKA,GAAG,IACxCuE,cAAc,CAAC/B,OAAO,CAACrD,MAAM,CAACc,GAAG,KAAKA,GAAG,CAAC,EAC5C;MACAuE,UAAU,CAACrF,MAAM,GAAG;QAACa,GAAG;QAAEC;OAAI;MAC9BwE,WAAW,GAAG,IAAI;IACpB;IAEA,IAAIpF,IAAI,KAAK,IAAI,IAAIkF,cAAc,CAAC/B,OAAO,CAACnD,IAAI,KAAKA,IAAI,EAAE;MACzDmF,UAAU,CAACnF,IAAI,GAAGA,IAAc;MAChCoF,WAAW,GAAG,IAAI;IACpB;IAEA,IAAIlF,OAAO,KAAK,IAAI,IAAIgF,cAAc,CAAC/B,OAAO,CAACjD,OAAO,KAAKA,OAAO,EAAE;MAClEiF,UAAU,CAACjF,OAAO,GAAGA,OAAiB;MACtCkF,WAAW,GAAG,IAAI;IACpB;IAEA,IAAIhF,IAAI,KAAK,IAAI,IAAI8E,cAAc,CAAC/B,OAAO,CAAC/C,IAAI,KAAKA,IAAI,EAAE;MACzD+E,UAAU,CAAC/E,IAAI,GAAGA,IAAc;MAChCgF,WAAW,GAAG,IAAI;IACpB;IAEA,IAAIA,WAAW,EAAE;MACfvM,GAAG,CAAC2L,UAAU,CAACW,UAAU,CAAC;IAC5B;EACF,CAAC,CAAC;AACJ;ACpEO,MAAME,kBAAkB,GAAGA,CAAA,KAAK;EACrC,MAAMC,KAAK,GAAkB;IAC3BC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,eAAe;IACzBC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE,OAAO;IACjBC,KAAK,EAAE,iBAAiB;IACxBC,UAAU,EAAE,SAAS;IACrBC,OAAO,EAAE;GACV;EAED,oBACE1K,KAAA,CAAA5B,aAAA;IAAKwL,KAAK,EAAEA;GACV,eAAA5J,KAAA,CAAA5B,aAAA,aAAI,oBAAsB,CAC1B,eAAA4B,KAAA,CAAA5B,aAAA,YACE,2GACkC,eAAA4B,KAAA,CAAA5B,aAAA,eAAM,oBAAwB,CAAE,EAEjE,gFACA,CAAC;AAEV,CAAC;SC5BeuM,cAAcA,CAAA;EAC5B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGxK,QAAQ,CAAW,IAAI,CAAC;EAC5C,MAAMkH,GAAG,GAAGpF,WAAW,CAAE5D,KAAQ,IAAKsM,KAAK,CAACtM,KAAK,CAAC,EAAE,CAACsM,KAAK,CAAC,CAAC;EAE5D,OAAO,CAACD,EAAE,EAAErD,GAAa,CAAU;AACrC;;ACLA;;AAEG;SACauD,cAAcA,CAAA;EAC5B,MAAMrJ,MAAM,GAAGyG,mBAAmB,EAAE;EAEpC,OAAOzG,MAAM,KAAKrG,gBAAgB,CAACG,MAAM;AAC3C;SCPgBwP,cAAcA,CAAA;EAC5B,MAAM,GAAGC,WAAW,CAAC,GAAGnJ,UAAU,CAACoJ,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAEjD,OAAOD,WAAW;AACpB;ACMA,SAASE,kBAAkBA,CAAC/N,GAAoB,EAAEoK,GAAmB;EACnE,MAAMnD,MAAM,GAAGjH,GAAG,CAACkH,SAAS,EAAE;EAC9B,MAAMC,IAAI,GAAGnH,GAAG,CAACoH,OAAO,EAAE;EAC1B,MAAMC,OAAO,GAAGrH,GAAG,CAACsH,UAAU,EAAE,IAAI,CAAC;EACrC,MAAMC,IAAI,GAAGvH,GAAG,CAACwH,OAAO,EAAE,IAAI,CAAC;EAC/B,MAAMC,MAAM,GAAGzH,GAAG,CAAC0H,SAAS,EAAE;EAE9B,IAAI,CAACT,MAAM,IAAI,CAACQ,MAAM,IAAI,CAACE,MAAM,CAACC,QAAQ,CAACT,IAAI,CAAC,EAAE;IAChDxH,OAAO,CAACC,IAAI,CACV,kEAAkE,GAChE,6DAA6D,GAC7D,0EAA0E,CAC7E;EACH;EAEA;EACAyB,MAAM,CAAC2M,MAAM,CAAC5D,GAAG,CAACE,OAAO,EAAE;IACzBrD,MAAM,EAAE,CAAAA,MAAM,oBAANA,MAAM,CAAEY,MAAM,EAAE,KAAI;MAACC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;KAAE;IAC5CZ,IAAI,EAAGA,IAAe,IAAI,CAAC;IAC3BE,OAAO,EAAEA,OAAiB;IAC1BE,IAAI,EAAEA;EACP,EAAC;AACJ;AAEA;;;;AAIG;AACG,SAAU0G,wBAAwBA,CACtCjO,GAA2B;EAE3B,MAAM6N,WAAW,GAAGD,cAAc,EAAE;EACpC,MAAMxD,GAAG,GAAGC,MAAM,CAAc;IAC9BpD,MAAM,EAAE;MAACa,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;KAAE;IACxBV,OAAO,EAAE,CAAC;IACVE,IAAI,EAAE,CAAC;IACPJ,IAAI,EAAE;EACP,EAAC;EAEF;EACA;EACA;EACA;EACAhC,SAAS,CAAC,MAAK;IACb,IAAI,CAACnF,GAAG,EAAE;IAEV,MAAMmG,QAAQ,GAAG/G,MAAM,CAACC,IAAI,CAAC+G,KAAK,CAACC,WAAW,CAC5CrG,GAAG,EACH,gBAAgB,EAChB,MAAK;MACH+N,kBAAkB,CAAC/N,GAAG,EAAEoK,GAAG,CAAC;MAE5B;MACA;MACA;MACA;MACAyD,WAAW,EAAE;IACf,CAAC,CACF;IAED,OAAO,MAAM1H,QAAQ,CAACK,MAAM,EAAE;EAChC,CAAC,EAAE,CAACxG,GAAG,EAAE6N,WAAW,CAAC,CAAC;EAEtB,OAAOzD,GAAG;AACZ;;;AChEA;;;;;;;;;;;AAWG;AACH,MAAM8D,cAAc;EAGlB,OAAOrD,GAAGA,CAAC1K,GAAW;IACpB,OAAO,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,IAAI,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,CAACiF,MAAM,GAAG,CAAC;EAC1D;EAEA,OAAO+I,GAAGA,CAAChO,GAAW;IACpB,IAAI,CAAC,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,EAAE,OAAO,IAAI;IAEnC,OAAO,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,CAACgO,GAAG,EAAE,IAAI,IAAI;EACxC;EAEA,OAAOjP,IAAIA,CAACiB,GAAW,EAAEiB,KAAsB;IAC7C,IAAI,CAAC,IAAI,CAACE,OAAO,CAACnB,GAAG,CAAC,EAAE,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,GAAG,EAAE;IAE9C,IAAI,CAACmB,OAAO,CAACnB,GAAG,CAAC,CAACjB,IAAI,CAACkC,KAAK,CAAC;EAC/B;;AAGF;;;;;;AAMG;AA1BG8M,cAAc,CACX5M,OAAO,GAAuC,EAAE;AA0BzC,SAAA8M,cAAcA,CAC5BrK,KAAe,EACfsK,OAAgC;EAMhC,MAAMC,WAAW,GAAGX,cAAc,EAAE;EACpC,MAAM,CAAC3N,GAAG,EAAEuO,MAAM,CAAC,GAAGrL,QAAQ,CAAyB,IAAI,CAAC;EAC5D,MAAM,CAACsL,SAAS,EAAEC,YAAY,CAAC,GAAGjB,cAAc,EAAkB;EAElE,MAAMnB,cAAc,GAAG4B,wBAAwB,CAACjO,GAAG,CAAC;EAEpD,MAAM;MACJqD,EAAE;MACFqL,aAAa;MACbC,aAAa;MACbC,WAAW;MACXC,cAAc;MACdC,WAAW;MACXC,SAAS;MACTC,aAAa;MACbC;IAEa,CACd,GAAGlL,KAAK;IADJ6G,UAAU,GAAAjH,6BAAA,CACXI,KAAK,EAAAmL,WAAA;EAET,MAAMC,OAAO,GAAGpL,KAAK,CAACoD,IAAI,KAAK7B,SAAS,IAAIvB,KAAK,CAAC6K,WAAW,KAAKtJ,SAAS;EAC3E,MAAM8J,SAAS,GACbrL,KAAK,CAACkD,MAAM,KAAK3B,SAAS,IAAIvB,KAAK,CAAC4K,aAAa,KAAKrJ,SAAS;EAEjE,IAAI,CAACoJ,aAAa,KAAK,CAACS,OAAO,IAAI,CAACC,SAAS,CAAC,EAAE;IAC9CzP,OAAO,CAACC,IAAI,CACV,4CAA4C,GAC1C,wEAAwE,GACxE,sEAAsE,GACtE,uBAAuB,GACvB,sFAAsF,CACzF;EACH;EAEA;EACA,IAAI,CAACgL,UAAU,CAAC3D,MAAM,IAAI0H,aAAa,EAAE/D,UAAU,CAAC3D,MAAM,GAAG0H,aAAa;EAC1E,IAAI,CAAC/D,UAAU,CAACzD,IAAI,IAAIQ,MAAM,CAACC,QAAQ,CAACgH,WAAW,CAAC,EAClDhE,UAAU,CAACzD,IAAI,GAAGyH,WAAW;EAC/B,IAAI,CAAChE,UAAU,CAACvD,OAAO,IAAIM,MAAM,CAACC,QAAQ,CAACiH,cAAc,CAAC,EACxDjE,UAAU,CAACvD,OAAO,GAAGwH,cAAc;EACrC,IAAI,CAACjE,UAAU,CAACrD,IAAI,IAAII,MAAM,CAACC,QAAQ,CAACkH,WAAW,CAAC,EAClDlE,UAAU,CAACrD,IAAI,GAAGuH,WAAW;EAE/B,KAAK,MAAM3O,GAAG,IAAIkB,MAAM,CAAC2I,IAAI,CAACY,UAAU,CAAgC,EACtE,IAAIA,UAAU,CAACzK,GAAG,CAAC,KAAKmF,SAAS,EAAE,OAAOsF,UAAU,CAACzK,GAAG,CAAC;EAE3D,MAAMkP,gBAAgB,GAAGhF,MAAM,EAG3B;EAEJ;EACAlF,SAAS,CACP,MAAK;IACH,IAAI,CAACqJ,SAAS,IAAI,CAACF,WAAW,EAAE;IAEhC,MAAM;MAACnL,cAAc;MAAEK;IAAkB,IAAG6K,OAAO;IAEnD;IACA,MAAM;MAACiB;IAAM,IAAGvL,KAAK;IACrB,MAAMwL,QAAQ,GAAG,GAAGD,KAAK,IAAI,SAAS,IAAIN,aAAa,IAAI,SAAS,IAAIC,WAAW,IAAI,OAAO,EAAE;IAEhG,IAAIO,MAAmB;IACvB,IAAIxP,GAAoB;IAExB,IAAI+O,SAAS,IAAIb,cAAc,CAACrD,GAAG,CAAC0E,QAAQ,CAAC,EAAE;MAC7CvP,GAAG,GAAGkO,cAAc,CAACC,GAAG,CAACoB,QAAQ,CAAoB;MACrDC,MAAM,GAAGxP,GAAG,CAACyP,MAAM,EAAE;MAErBjB,SAAS,CAACkB,WAAW,CAACF,MAAM,CAAC;MAC7BxP,GAAG,CAAC8K,UAAU,CAACF,UAAU,CAAC;MAE1B;MACA;MACA+E,UAAU,CAAC,MAAM3P,GAAG,CAAC4P,SAAS,CAAC5P,GAAG,CAACkH,SAAS,EAAG,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC,MAAM;MACLsI,MAAM,GAAGxO,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtCuO,MAAM,CAAC/C,KAAK,CAACoD,MAAM,GAAG,MAAM;MAC5BrB,SAAS,CAACkB,WAAW,CAACF,MAAM,CAAC;MAE7BxP,GAAG,GAAG,IAAIZ,MAAM,CAACC,IAAI,CAACyQ,GAAG,CAACN,MAAM,EAAAjM,QAAA,KAC3BqH,UAAU,EACToE,aAAa,GACb;QAACA,aAAa,EAAEA;MAA2C,IAC3D,EAAE,EACFC,WAAW,GACX;QAACA,WAAW,EAAEA;MAAuC,IACrD,EAAE,CACP,CAAC;IACJ;IAEAV,MAAM,CAACvO,GAAG,CAAC;IACXmD,cAAc,CAACnD,GAAG,EAAEqD,EAAE,CAAC;IAEvB,IAAIqL,aAAa,EAAE;MACjB,MAAM;UAACnB;QAAsB,IAAGmB,aAAa;QAA1BqB,SAAS,GAAApM,6BAAA,CAAI+K,aAAa,EAAAsB,UAAA;MAC7ChQ,GAAG,CAACiQ,SAAS,CAACF,SAAS,EAAExC,OAAO,CAAC;IACnC;IAEA;IAAA,KACK,IAAI,CAAC4B,OAAO,IAAI,CAACC,SAAS,EAAE;MAC/BpP,GAAG,CAACiQ,SAAS,CAAC;QAAChI,IAAI,EAAE,GAAG;QAAEE,IAAI,EAAE,CAAC,GAAG;QAAED,KAAK,EAAE,CAAC,EAAE;QAAEF,KAAK,EAAE;MAAG,EAAC;IAC/D;IAEA;IACA,IAAIqH,gBAAgB,CAAC/E,OAAO,EAAE;MAC5B,MAAM;QAACgF,KAAK,EAAEY,UAAU;QAAEC,WAAW,EAAEC;OAAiB,GACtDf,gBAAgB,CAAC/E,OAAO;MAC1B,IAAI4F,UAAU,KAAKZ,KAAK,EAAE;QACxBtP,GAAG,CAAC8K,UAAU,CAACsF,gBAAgB,CAAC;MAClC;IACF;IAEA,OAAO,MAAK;MACVf,gBAAgB,CAAC/E,OAAO,GAAG;QACzBgF,KAAK;QACL;QACAa,WAAW,EAAE9D,cAAc,CAAC/B;OAC7B;MAED;MACAkF,MAAM,CAAChJ,MAAM,EAAE;MAEf,IAAIuI,SAAS,EAAE;QACb;QACAb,cAAc,CAAChP,IAAI,CAACqQ,QAAQ,EAAEvP,GAAG,CAAC;MACpC,CAAC,MAAM;QACL;QACAZ,MAAM,CAACC,IAAI,CAAC+G,KAAK,CAACiK,sBAAsB,CAACrQ,GAAG,CAAC;MAC/C;MAEAuO,MAAM,CAAC,IAAI,CAAC;MACZ/K,iBAAiB,CAACH,EAAE,CAAC;KACtB;GACF;EAED;EACA;EACA;EACA;EACA;EACA,CACEmL,SAAS,EACTF,WAAW,EACXjL,EAAE;EAEF;EACA;EACAU,KAAK,CAACuL,KAAK,EACXvL,KAAK,CAACiL,aAAa,EACnBjL,KAAK,CAACkL,WAAW,CAClB,CACF;EAED,OAAO,CAACjP,GAAG,EAAEyO,YAAY,EAAEpC,cAAc,CAAU;AACrD;AC3LO,MAAMiE,iBAAiB,GAC5BzN,KAAK,CAACC,aAAa,CAAgC,IAAI;AAgBzD;AACA;AAEO,MAAMyN,WAAW,GAAG;EACzBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE;;AAIV,MAAMC,aAAa,GAAG;EAC3BC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,aAAa,EAAE;;AA6DJ,MAAAhB,GAAG,GAAI/L,KAAkC,IAAI;EACxD,MAAM;IAACyB,QAAQ;IAAEnC,EAAE;IAAE0N,SAAS;IAAEtE;EAAK,CAAC,GAAG1I,KAAK;EAC9C,MAAMsK,OAAO,GAAGpD,UAAU,CAACrI,kBAAkB,CAAC;EAC9C,MAAMpD,aAAa,GAAGuL,mBAAmB,EAAE;EAE3C,IAAI,CAACsD,OAAO,EAAE;IACZ,MAAM,IAAIlM,KAAK,CACb,2DAA2D,CAC5D;EACH;EAEA,MAAM,CAACnC,GAAG,EAAEgR,MAAM,EAAE3E,cAAc,CAAC,GAAG+B,cAAc,CAACrK,KAAK,EAAEsK,OAAO,CAAC;EAEpEjC,kBAAkB,CAACpM,GAAG,EAAEqM,cAAc,EAAEtI,KAAK,CAAC;EAC9C8B,YAAY,CAAC7F,GAAG,EAAE+D,KAAK,CAAC;EACxB2G,aAAa,CAAC1K,GAAG,EAAE+D,KAAK,CAAC;EAEzB,MAAMsH,kBAAkB,GAAGH,qBAAqB,CAAClL,GAAG,EAAE+D,KAAK,CAAC;EAC5D,MAAMkN,sBAAsB,GAAG,CAAC,CAAClN,KAAK,CAACmN,UAAU;EAEjD;EACA/L,SAAS,CAAC,MAAK;IACb,IAAI,CAACnF,GAAG,EAAE;IAEV;IACA;IACA;IACA,IAAIqL,kBAAkB,EAAE;MACtBrL,GAAG,CAAC8K,UAAU,CAAC;QAACqG,gBAAgB,EAAE;MAAK,EAAC;IAC1C;IAEA;IACA,IAAI9F,kBAAkB,IAAI4F,sBAAsB,EAAE;MAChDjR,GAAG,CAAC8K,UAAU,CAAC;QACbsG,eAAe,EAAE,MAAM;QACvBC,iBAAiB,EAAE;MACpB,EAAC;IACJ;IAEA,OAAO,MAAK;MACVrR,GAAG,CAAC8K,UAAU,CAAC;QACbsG,eAAe,EAAErN,KAAK,CAACqN,eAAe;QACtCC,iBAAiB,EAAEtN,KAAK,CAACsN;MAC1B,EAAC;KACH;EACH,CAAC,EAAE,CACDrR,GAAG,EACHqL,kBAAkB,EAClB4F,sBAAsB,EACtBlN,KAAK,CAACqN,eAAe,EACrBrN,KAAK,CAACsN,iBAAiB,CACxB,CAAC;EAEF;EACA,MAAMpK,MAAM,GAAGlD,KAAK,CAACkD,MAAM,GAAGiF,eAAe,CAACnI,KAAK,CAACkD,MAAM,CAAC,GAAG,IAAI;EAClE,IAAIa,GAAG,GAAkB,IAAI;EAC7B,IAAIC,GAAG,GAAkB,IAAI;EAC7B,IAAId,MAAM,IAAIU,MAAM,CAACC,QAAQ,CAACX,MAAM,CAACa,GAAG,CAAC,IAAIH,MAAM,CAACC,QAAQ,CAACX,MAAM,CAACc,GAAG,CAAC,EAAE;IACxED,GAAG,GAAGb,MAAM,CAACa,GAAa;IAC1BC,GAAG,GAAGd,MAAM,CAACc,GAAa;EAC5B;EAEA,MAAMuJ,aAAa,GAA8BzM,OAAO,CAAC,MAAK;IAAA,IAAA0M,IAAA,EAAAC,IAAA,EAAAC,WAAA,EAAAC,cAAA,EAAAC,WAAA;IAC5D,OAAO;MACL1K,MAAM,EAAE;QAACa,GAAG,GAAAyJ,IAAA,GAAEzJ,GAAG,YAAAyJ,IAAA,GAAI,CAAC;QAAExJ,GAAG,GAAAyJ,IAAA,GAAEzJ,GAAG,YAAAyJ,IAAA,GAAI;OAAE;MACtCrK,IAAI,GAAAsK,WAAA,GAAE1N,KAAK,CAACoD,IAAI,YAAAsK,WAAA,GAAI,CAAC;MACrBpK,OAAO,GAAAqK,cAAA,GAAE3N,KAAK,CAACsD,OAAO,YAAAqK,cAAA,GAAI,CAAC;MAC3BnK,IAAI,GAAAoK,WAAA,GAAE5N,KAAK,CAACwD,IAAI,YAAAoK,WAAA,GAAI;KACrB;EACH,CAAC,EAAE,CAAC7J,GAAG,EAAEC,GAAG,EAAEhE,KAAK,CAACoD,IAAI,EAAEpD,KAAK,CAACsD,OAAO,EAAEtD,KAAK,CAACwD,IAAI,CAAC,CAAC;EAErD;EACA+D,eAAe,CAAC,MAAK;IACnB,IAAI,CAACtL,GAAG,IAAI,CAACiR,sBAAsB,EAAE;IAErCjR,GAAG,CAAC2L,UAAU,CAAC2F,aAAa,CAAC;IAC7B,MAAMnL,QAAQ,GAAGnG,GAAG,CAACqG,WAAW,CAAC,gBAAgB,EAAE,MAAK;MACtDrG,GAAG,CAAC2L,UAAU,CAAC2F,aAAa,CAAC;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAMnL,QAAQ,CAACK,MAAM,EAAE;GAC/B,EAAE,CAACxG,GAAG,EAAEiR,sBAAsB,EAAEK,aAAa,CAAC,CAAC;EAEhD,MAAMM,aAAa,GAAkB/M,OAAO,CAC1C,MAAAtB,QAAA;IACEsO,KAAK,EAAE,MAAM;IACbhC,MAAM,EAAE,MAAM;IACdnD,QAAQ,EAAE,UAAU;IACpB;IACAK,MAAM,EAAE1B,kBAAkB,GAAG,CAAC,CAAC,GAAG;GAE/B,EAAAoB,KAAK,CACR,EACF,CAACA,KAAK,EAAEpB,kBAAkB,CAAC,CAC5B;EAED,MAAM1F,YAAY,GAA2Bd,OAAO,CAAC,OAAO;IAAC7E;GAAI,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAE1E,IAAIR,aAAa,KAAKvB,gBAAgB,CAACK,YAAY,EAAE;IACnD,oBACEuE,KAAA,CAAA5B,aAAA;MACEwL,KAAK,EAAAlJ,QAAA;QAAGmJ,QAAQ,EAAE;MAAU,GAAMqE,SAAS,GAAG,EAAE,GAAGa,aAAa,CAAG;MACnEb,SAAS,EAAEA;IAAU,gBACrBlO,KAAA,CAAA5B,aAAA,CAACuL,kBAAkB,MACrB,CAAK,CAAC;EAEV;EAEA,oBACE3J,KAAA,CAAA5B,aAAA,QAAAsC,QAAA;IACE6G,GAAG,EAAE4G,MAAO;IACZ,eAAa,KAAM;IACnBvE,KAAK,EAAEsE,SAAS,GAAGzL,SAAS,GAAGsM,aAAc;IAC7Cb,SAAS,EAAEA;EAAU,GAChB1N,EAAE,GAAG;IAACA;EAAG,IAAG,EAAE,GAClBrD,GAAG,gBACF6C,KAAA,CAAA5B,aAAA,CAACqP,iBAAiB,CAAC1K,QAAQ;IAACxE,KAAK,EAAEuE;EAAa,GAC7CH,QACyB,CAAC,GAC3B,IACD,CAAC;AAEV;AACAsK,GAAG,CAACgC,eAAe,GAAG,IAAI;AClP1B,MAAMC,aAAa,GAAG,IAAItH,GAAG,EAAE;AAEf,SAAAuH,YAAYA,CAAC,GAAGC,IAAsC;EACpE,MAAM9R,GAAG,GAAG2E,IAAI,CAACC,SAAS,CAACkN,IAAI,CAAC;EAEhC,IAAI,CAACF,aAAa,CAAClH,GAAG,CAAC1K,GAAG,CAAC,EAAE;IAC3B4R,aAAa,CAACG,GAAG,CAAC/R,GAAG,CAAC;IAEtBR,OAAO,CAACc,KAAK,CAAC,GAAGwR,IAAI,CAAC;EACxB;AACF;;ACJA;;;;AAIG;MACUE,MAAM,GAAGA,CAAC9O,EAAoB,OAAI,KAA4B;EACzE,MAAM+O,GAAG,GAAGnH,UAAU,CAACrI,kBAAkB,CAAC;EAC1C,MAAM;IAAC5C;EAAG,CAAC,GAAGiL,UAAU,CAACqF,iBAAiB,CAAC,IAAI,EAAE;EAEjD,IAAI8B,GAAG,KAAK,IAAI,EAAE;IAChBJ,YAAY,CACV,mDAAmD,GACjD,iEAAiE,GACjE,gEAAgE,GAChE,gBAAgB,CACnB;IAED,OAAO,IAAI;EACb;EAEA,MAAM;IAAChP;EAAa,IAAGoP,GAAG;EAE1B;EACA,IAAI/O,EAAE,KAAK,IAAI,EAAE,OAAOL,YAAY,CAACK,EAAE,CAAC,IAAI,IAAI;EAEhD;EACA,IAAIrD,GAAG,EAAE,OAAOA,GAAG;EAEnB;EACA,OAAOgD,YAAY,CAAC,SAAS,CAAC,IAAI,IAAI;AACxC;ACXM,SAAUqP,cAAcA,CAACpS,IAAY;EACzC,MAAMqO,WAAW,GAAGX,cAAc,EAAE;EACpC,MAAMyE,GAAG,GAAGnH,UAAU,CAACrI,kBAAkB,CAAC;EAE1CuC,SAAS,CAAC,MAAK;IACb,IAAI,CAACmJ,WAAW,IAAI,CAAC8D,GAAG,EAAE;IAE1B;IACA;IACA;IACA,KAAKA,GAAG,CAAC9S,aAAa,CAACW,IAAI,CAAC;GAC7B,EAAE,CAACqO,WAAW,EAAE8D,GAAG,EAAEnS,IAAI,CAAC,CAAC;EAE5B,OAAO,CAAAmS,GAAG,oBAAHA,GAAG,CAAE5N,eAAe,CAACvE,IAAI,CAAC,KAAI,IAAI;AAC3C;;ACvCA;AAGA;;;AAGG;SACaqS,oBAAoBA,CAClCC,MAAsB,EACtBtS,IAAa,EACbuS,QAAmB;EAEnBrN,SAAS,CAAC,MAAK;IACb,IAAI,CAACoN,MAAM,IAAI,CAACtS,IAAI,IAAI,CAACuS,QAAQ,EAAE;IAEnC,MAAMrM,QAAQ,GAAG/G,MAAM,CAACC,IAAI,CAAC+G,KAAK,CAACC,WAAW,CAACkM,MAAM,EAAEtS,IAAI,EAAEuS,QAAQ,CAAC;IAEtE,OAAO,MAAMrM,QAAQ,CAACK,MAAM,EAAE;GAC/B,EAAE,CAAC+L,MAAM,EAAEtS,IAAI,EAAEuS,QAAQ,CAAC,CAAC;AAC9B;;ACjBA;;;;;;;;AAQG;SACaC,cAAcA,CAC5BC,MAAgB,EAChBC,IAAO,EACPvR,KAAW;EAEX+D,SAAS,CAAC,MAAK;IACb,IAAI,CAACuN,MAAM,EAAE;IAEbA,MAAM,CAACC,IAAI,CAAC,GAAGvR,KAAK;GACrB,EAAE,CAACsR,MAAM,EAAEC,IAAI,EAAEvR,KAAK,CAAC,CAAC;AAC3B;;ACrBA;AAGA;;;AAGG;SACawR,mBAAmBA,CACjCL,MAAoB,EACpBtS,IAAa,EACbuS,QAAmB;EAEnBrN,SAAS,CAAC,MAAK;IACb,IAAI,CAACoN,MAAM,IAAI,CAACtS,IAAI,IAAI,CAACuS,QAAQ,EAAE;IAEnCD,MAAM,CAACM,gBAAgB,CAAC5S,IAAI,EAAEuS,QAAQ,CAAC;IAEvC,OAAO,MAAMD,MAAM,CAACO,mBAAmB,CAAC7S,IAAI,EAAEuS,QAAQ,CAAC;GACxD,EAAE,CAACD,MAAM,EAAEtS,IAAI,EAAEuS,QAAQ,CAAC,CAAC;AAC9B;;ACnBA;AAyBM,SAAUO,gBAAgBA,CAC9BC,MAAqE;EAErE,OACGA,MAAmD,CAACC,OAAO,KAAK3N,SAAS;AAE9E;AAEA,SAAS4N,aAAaA,CAACC,IAAU;EAC/B,OAAOA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY;AAC5C;AAEA;;;AAGG;AACI,MAAMC,iBAAiB,GAAG;EAC/BC,QAAQ,EAAE,UAAU;EACpBC,2BAA2B,EAAE,6BAA6B;EAC1DC,iCAAiC,EAAE;;AAK9B,MAAMC,qBAAqB,GAChC9Q,KAAK,CAACC,aAAa,CAAoC,IAAI;AAE7D;AACO,MAAM8Q,yBAAyB,GAAG;EACvCC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACtBC,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;EACzBC,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;EAClBC,SAAS,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;EACzBC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;EAC1BC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACtBC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;EACnBC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;EAC3BC,SAAS,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;EACzBC,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;EACtBC,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;EAC7BC,YAAY,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC9BC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;EAC3BC,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;EAC9BC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;EACvBC,YAAY,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC9BC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK;;AAmDvB,MAAMC,aAAa,GAAGA,CAAC;EACrBtP,QAAQ;EACRuP,MAAM;EACNhE,SAAS;EACTiE;AAAW,CACQ,KAAI;EACvB,MAAM,CAACC,YAAY,EAAEC,YAAY,CAAC,GAChCF,WAAW,WAAXA,WAAW,GAAIpB,yBAAyB,CAAC,QAAQ,CAAC;EAEpD;EACA;EACA,MAAMuB,cAAc,GAAG,mCAAmCF,YAAY,MAAMC,YAAY,GAAG;EAE3F;IACE;IACArS,KAAA,CAAA5B,aAAA;MAAKwL,KAAK,EAAE;QAAC2I,SAAS,EAAED;MAAe;KAErC,eAAAtS,KAAA,CAAA5B,aAAA;MAAK8P,SAAS,EAAEA,SAAU;MAACtE,KAAK,EAAEsI;IAAO,GACtCvP,QACE,CACF;EAAA;AAET,CAAC;AAOD,SAAS6P,iBAAiBA,CAACtR,KAA0B;EACnD,MAAM,CAACiP,MAAM,EAAEsC,SAAS,CAAC,GACvBpS,QAAQ,CAAkD,IAAI,CAAC;EACjE,MAAM,CAACqS,gBAAgB,EAAEC,mBAAmB,CAAC,GAC3CtS,QAAQ,CAAwB,IAAI,CAAC;EAEvC,MAAMlD,GAAG,GAAGmS,MAAM,EAAE;EACpB,MAAMsD,aAAa,GAAGpD,cAAc,CAAC,QAAQ,CAAC;EAE9C,MAAM;IACJ7M,QAAQ;IACRoD,OAAO;IACPmI,SAAS;IACT2E,YAAY;IACZC,YAAY;IACZ5M,MAAM;IACN6M,WAAW;IACXC,SAAS;IACTC,iBAAiB;IACjBC,SAAS;IACTC,SAAS;IACTtJ,QAAQ;IACRuJ,KAAK;IACLlJ;EACD,IAAGhJ,KAAK;EAET,MAAMmS,WAAW,GAAGC,QAAQ,CAACC,KAAK,CAAC5Q,QAAQ,CAAC;EAE5C;EACAL,SAAS,CAAC,MAAK;IACb,IAAI,CAACnF,GAAG,IAAI,CAACyV,aAAa,EAAE;IAE5B,MAAMY,SAAS,GAAG,IAAIZ,aAAa,CAACa,qBAAqB,EAAE;IAC3DD,SAAS,CAACrW,GAAG,GAAGA,GAAG;IAEnBsV,SAAS,CAACe,SAAS,CAAC;IAEpB;IACA,IAAIE,cAAc,GAAwB,IAAI;IAC9C,IAAIL,WAAW,GAAG,CAAC,EAAE;MACnBK,cAAc,GAAGvV,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAE9C;MACA;MACA;MACAsV,cAAc,CAACC,cAAc,GAAG,IAAI;MAEpCH,SAAS,CAACpD,OAAO,GAAGsD,cAAc;MAClCf,mBAAmB,CAACe,cAAc,CAAC;IACrC;IAEA,OAAO,MAAK;MAAA,IAAAE,eAAA;MACVJ,SAAS,CAACrW,GAAG,GAAG,IAAI;MACpB,CAAAyW,eAAA,GAAAF,cAAc,aAAdE,eAAA,CAAgBjQ,MAAM,EAAE;MACxB8O,SAAS,CAAC,IAAI,CAAC;MACfE,mBAAmB,CAAC,IAAI,CAAC;KAC1B;GACF,EAAE,CAACxV,GAAG,EAAEyV,aAAa,EAAES,WAAW,CAAC,CAAC;EAErC;EACA;EACA;EACA;EACA/Q,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6N,MAAM,IAAI,CAACA,MAAM,CAACC,OAAO,IAAIiD,WAAW,GAAG,CAAC,EAAE;IAElDlD,MAAM,CAACC,OAAuB,CAAClC,SAAS,GAAGA,SAAS,IAAI,EAAE;GAC5D,EAAE,CAACiC,MAAM,EAAEjC,SAAS,EAAEmF,WAAW,CAAC,CAAC;EAEpC;EACAzD,cAAc,CAACO,MAAM,EAAE,UAAU,EAAEtG,QAAQ,CAAC;EAC5C+F,cAAc,CAACO,MAAM,EAAE,OAAO,EAAEiD,KAAK,IAAL,OAAAA,KAAK,GAAI,EAAE,CAAC;EAC5CxD,cAAc,CAACO,MAAM,EAAE,QAAQ,EAAEjG,MAAM,CAAC;EACxC0F,cAAc,CACZO,MAAM,EACN,mBAAmB,EACnB8C,iBAAkD,CACnD;EAED;EACA;EACA3Q,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6N,MAAM,EAAE;IAEb,IAAIgD,SAAS,KAAK1Q,SAAS,EAAE0N,MAAM,CAAC0D,YAAY,GAAGV,SAAS,CAAC,KACxD,IAAIjN,MAAM,IAAI6M,WAAW,IAAIC,SAAS,EAAE7C,MAAM,CAAC0D,YAAY,GAAG,IAAI,CAAC,KACnE1D,MAAM,CAAC0D,YAAY,GAAG,KAAK;EAClC,CAAC,EAAE,CAAC1D,MAAM,EAAEgD,SAAS,EAAEjN,MAAM,EAAE8M,SAAS,EAAED,WAAW,CAAC,CAAC;EAEvD;EACA;EACAzQ,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6N,MAAM,EAAE;IAEb,MAAM2D,YAAY,GAChBZ,SAAS,KAAKzQ,SAAS,IACvBsR,OAAO,CAAChO,OAAO,CAAC,IAChBgO,OAAO,CAAClB,YAAY,CAAC,IACrBkB,OAAO,CAACjB,YAAY,CAAC;IAEvB;IACA;IACA3C,MAAM,CAAC2D,YAAY,GAAGA,YAAY;IAElC;IACA,IAAIA,YAAY,IAAI3D,MAAM,YAANA,MAAM,CAAEC,OAAO,IAAIC,aAAa,CAACF,MAAM,CAACC,OAAO,CAAC,EAAE;MACpED,MAAM,CAACC,OAAO,CAACxG,KAAK,CAACoK,aAAa,GAAG,MAAM;MAE3C,IAAI7D,MAAM,CAACC,OAAO,CAAC6D,iBAAiB,EAAE;QACnC9D,MAAM,CAACC,OAAO,CAAC6D,iBAAiC,CAACrK,KAAK,CAACoK,aAAa,GACnE,KAAK;MACT;IACF;EACF,CAAC,EAAE,CAAC7D,MAAM,EAAE+C,SAAS,EAAEnN,OAAO,EAAE8M,YAAY,EAAEC,YAAY,CAAC,CAAC;EAE5DrD,oBAAoB,CAACU,MAAM,EAAE,OAAO,EAAEpK,OAAO,CAAC;EAC9C0J,oBAAoB,CAACU,MAAM,EAAE,MAAM,EAAEjK,MAAM,CAAC;EAC5CuJ,oBAAoB,CAACU,MAAM,EAAE,WAAW,EAAE4C,WAAW,CAAC;EACtDtD,oBAAoB,CAACU,MAAM,EAAE,SAAS,EAAE6C,SAAS,CAAC;EAElDjD,mBAAmB,CAACI,MAAM,oBAANA,MAAM,CAAE+D,OAAO,EAAE,YAAY,EAAErB,YAAY,CAAC;EAChE9C,mBAAmB,CAACI,MAAM,oBAANA,MAAM,CAAE+D,OAAO,EAAE,YAAY,EAAEpB,YAAY,CAAC;EAEhE,OAAO,CAAC3C,MAAM,EAAEuC,gBAAgB,CAAU;AAC5C;AAEO,MAAMyB,cAAc,GAAGC,UAAU,CACtC,CAAClT,KAA0B,EAAEqG,GAA2B,KAAI;EAC1D,MAAM;IAAC5E,QAAQ;IAAEiH,KAAK;IAAEsE,SAAS;IAAEiE;EAAW,CAAC,GAAGjR,KAAK;EACvD,MAAM,CAACiP,MAAM,EAAEuC,gBAAgB,CAAC,GAAGF,iBAAiB,CAACtR,KAAK,CAAC;EAE3D,MAAMmT,0BAA0B,GAC9BrS,OAAO,CAAC,MAAOmO,MAAM,GAAG;IAACA;EAAM,CAAC,GAAG,IAAK,EAAE,CAACA,MAAM,CAAC,CAAC;EAErDmE,mBAAmB,CAAC/M,GAAG,EAAE,MAAM4I,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;EAEhD,IAAI,CAACuC,gBAAgB,EAAE,OAAO,IAAI;EAElC,oBACE1S,KAAA,CAAA5B,aAAA,CAAC0S,qBAAqB,CAAC/N,QAAQ;IAACxE,KAAK,EAAE8V;EAA2B,GAC/DE,YAAY,cACXvU,KAAA,CAAA5B,aAAA,CAAC6T,aAAa;IACZE,WAAW,EAAEA,WAAY;IACzBD,MAAM,EAAEtI,KAAM;IACdsE,SAAS,EAAEA;EAAU,GACpBvL,QACY,CAAC,EAChB+P,gBAAgB,CAEY,CAAC;AAErC,CAAC;SAGa8B,oBAAoBA,CAAA;EAClC,MAAM,CAACrE,MAAM,EAAEsC,SAAS,CAAC,GACvBpS,QAAQ,CAAkD,IAAI,CAAC;EAEjE,MAAMoU,WAAW,GAAGtS,WAAW,CAAEuS,CAA2B,IAAI;IAC9DjC,SAAS,CAACiC,CAAC,CAAC;GACb,EAAE,EAAE,CAAC;EAEN,OAAO,CAACD,WAAW,EAAEtE,MAAM,CAAU;AACvC;SC9SgBwE,iBAAiBA,CAC/BT,OAAoB,EACpBhC,MAA4B,EAC5B0C,UAAgC;EAEhC,IAAI1C,MAAM,IAAI,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAChD,MAAM,IAAI5S,KAAK,CACb,sEAAsE,GACpE,wEAAwE,GACxE,YAAY,CACf;EACH;EAEA,MAAMuV,YAAY,GAAGX,OAAO,CAACtK,KAAK;EAElC;EACA,IAAIgL,UAAU,IAAI,IAAI,EAAE;IACtB,IAAI1C,MAAM,IAAI,IAAI,EAAE;IAEpB,KAAK,MAAM4C,SAAS,IAAI5C,MAAM,EAAE;MAC9B,IAAI,CAACA,MAAM,CAAC6C,cAAc,CAACD,SAAS,CAAC,EAAE;MAEvCE,gBAAgB,CACdH,YAAY,EACZC,SAAS,EACT5C,MAAM,CAAC4C,SAAgC,CAAC,CACzC;IACH;IAEA;EACF;EAEA;EACA,KAAK,MAAMA,SAAS,IAAIF,UAAU,EAAE;IAClC,IACEA,UAAU,CAACG,cAAc,CAACD,SAAS,CAAC,KACnC5C,MAAM,IAAI,IAAI,IAAI,CAACA,MAAM,CAAC6C,cAAc,CAACD,SAAS,CAAC,CAAC,EACrD;MACA;MACA,MAAMG,gBAAgB,GAAGH,SAAS,CAACI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;MACtD,IAAID,gBAAgB,EAAE;QACpBJ,YAAY,CAACM,WAAW,CAACL,SAAS,EAAE,EAAE,CAAC;MACzC,CAAC,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;QAChCD,YAAY,CAACO,QAAQ,GAAG,EAAE;MAC5B,CAAC,MAAM;QACLP,YAAY,CAACC,SAAgB,CAAC,GAAG,EAAE;MACrC;IACF;EACF;EAEA;EACA,IAAI5C,MAAM,IAAI,IAAI,EAAE;EAEpB,KAAK,MAAM4C,SAAS,IAAI5C,MAAM,EAAE;IAC9B,MAAM3T,KAAK,GAAG2T,MAAM,CAAC4C,SAAgC,CAAC;IACtD,IACE5C,MAAM,CAAC6C,cAAc,CAACD,SAAS,CAAC,IAChCF,UAAU,CAACE,SAAgC,CAAC,KAAKvW,KAAK,EACtD;MACAyW,gBAAgB,CAACH,YAAY,EAAEC,SAAS,EAAEvW,KAAK,CAAC;IAClD;EACF;AACF;AAEA,SAASyW,gBAAgBA,CACvBH,YAAiC,EACjCC,SAAiB,EACjBvW,KAAc;EAEd,MAAM0W,gBAAgB,GAAGH,SAAS,CAACI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;EAEtD;EACA,IAAI3W,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,EAAE,EAAE;IAC/D,IAAI0W,gBAAgB,EAAE;MACpBJ,YAAY,CAACM,WAAW,CAACL,SAAS,EAAE,EAAE,CAAC;IACzC,CAAC,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;MAChCD,YAAY,CAACO,QAAQ,GAAG,EAAE;IAC5B,CAAC,MAAM;MACLP,YAAY,CAACC,SAAgB,CAAC,GAAG,EAAE;IACrC;EACF;EAEA;EAAA,KACK,IAAIG,gBAAgB,EAAE;IACzBJ,YAAY,CAACM,WAAW,CAACL,SAAS,EAAEvW,KAAe,CAAC;EACtD;EAEA;EAAA,KACK,IACH,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,CAAC,IACX,CAAC8W,gBAAgB,CAACP,SAAS,CAAC,EAC5B;IACAD,YAAY,CAACC,SAAgB,CAAC,GAAGvW,KAAK,GAAG,IAAI,CAAC;EAChD;EAEA;EAAA,KACK;IACH,IAAIuW,SAAS,KAAK,OAAO,EAAE;MACzBD,YAAY,CAACO,QAAQ,GAAG7W,KAAe;IACzC,CAAC,MAAM;MACLsW,YAAY,CAACC,SAAgB,CAAC,GAAG,CAAC,EAAE,GAAGvW,KAAK,EAAE+W,IAAI,EAAE;IACtD;EACF;AACF;AAEA;AACA,MAAMC,eAAe,GAAG,IAAI3N,GAAG,CAAC,CAC9B,yBAAyB,EACzB,aAAa,EACb,mBAAmB,EACnB,kBAAkB,EAClB,kBAAkB,EAClB,SAAS,EACT,cAAc,EACd,iBAAiB,EACjB,aAAa,EACb,SAAS,EACT,MAAM,EACN,UAAU,EACV,cAAc,EACd,YAAY,EACZ,cAAc,EACd,WAAW,EACX,UAAU,EACV,SAAS,EACT,YAAY,EACZ,aAAa,EACb,cAAc,EACd,YAAY,EACZ,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,SAAS,EACT,OAAO,EACP,SAAS,EACT,OAAO,EACP,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,aAAa;AAAE;AACf,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,aAAa,CACd,CAAC;AACF,SAASyN,gBAAgBA,CAACjY,IAAY;EACpC,OAAOmY,eAAe,CAACvN,GAAG,CAAC5K,IAAI,CAAC;AAClC;;ACrIA;;AAEG;AACU,MAAAoY,UAAU,GAAItU,KAAyC,IAAI;EACtE,MAAM;MACJ;MACAyB,QAAQ;MACR8S,aAAa;MAEb7L,KAAK;MACLsE,SAAS;MACTwH,WAAW;MAEX;MACAC,MAAM;MACNC,WAAW;MAEX;MACAC,OAAO;MACPC;MAEA;IACoB,CACrB,GAAG5U,KAAK;IADJ6U,iBAAiB,GAAAjV,6BAAA,CAClBI,KAAK,EAAA8U,WAAA;EAET;EACA,MAAMC,WAAW,GAAGzG,cAAc,CAAC,MAAM,CAAC;EAC1C,MAAM,CAAC0G,UAAU,EAAEC,aAAa,CAAC,GAAG9V,QAAQ,CAC1C,IAAI,CACL;EAED,MAAM+V,mBAAmB,GAAG5O,MAAM,CAAqB,IAAI,CAAC;EAC5D,MAAM6O,kBAAkB,GAAG7O,MAAM,CAAqB,IAAI,CAAC;EAE3DlF,SAAS,CACP,MAAK;IACH,IAAI,CAAC2T,WAAW,EAAE;IAElBG,mBAAmB,CAAC3O,OAAO,GAAGtJ,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3DiY,kBAAkB,CAAC5O,OAAO,GAAGtJ,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAE1D,MAAMkY,IAAI,GAAkCP,iBAAiB;IAC7D,IAAIL,WAAW,EAAE;MACfY,IAAI,CAACZ,WAAW,GAAG,IAAInZ,MAAM,CAACC,IAAI,CAAC+Z,IAAI,CAACb,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;IACzE;IAEA,IAAID,aAAa,EAAE;MACjB;MACA;MACAa,IAAI,CAACb,aAAa,GAChB,OAAOA,aAAa,KAAK,QAAQ,GAC7BA,aAAa,GACbY,kBAAkB,CAAC5O,OAAO;IAClC;IAEA;IACA,MAAMyO,UAAU,GAAG,IAAI3Z,MAAM,CAACC,IAAI,CAACgZ,UAAU,CAACO,iBAAiB,CAAC;IAChEG,UAAU,CAACM,UAAU,CAACJ,mBAAmB,CAAC3O,OAAO,CAAC;IAElD0O,aAAa,CAACD,UAAU,CAAC;IAEzB;IACA,OAAO,MAAK;MAAA,IAAAO,qBAAA,EAAAC,qBAAA;MACVR,UAAU,CAACM,UAAU,CAAC,IAAI,CAAC;MAE3B,CAAAC,qBAAA,GAAAL,mBAAmB,CAAC3O,OAAO,aAA3BgP,qBAAA,CAA6B9S,MAAM,EAAE;MACrC,CAAA+S,qBAAA,GAAAL,kBAAkB,CAAC5O,OAAO,aAA1BiP,qBAAA,CAA4B/S,MAAM,EAAE;MAEpCyS,mBAAmB,CAAC3O,OAAO,GAAG,IAAI;MAClC4O,kBAAkB,CAAC5O,OAAO,GAAG,IAAI;MAEjC0O,aAAa,CAAC,IAAI,CAAC;KACpB;GACF;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAACF,WAAW,CAAC,CACd;EAED;EACA;EACA,MAAMU,YAAY,GAAGnP,MAAM,CAAuB,IAAI,CAAC;EACvDlF,SAAS,CAAC,MAAK;IACb,IAAI,CAAC4T,UAAU,IAAI,CAACE,mBAAmB,CAAC3O,OAAO,EAAE;IAEjDkN,iBAAiB,CACfyB,mBAAmB,CAAC3O,OAAO,EAC3BmC,KAAK,IAAI,IAAI,EACb+M,YAAY,CAAClP,OAAO,CACrB;IAEDkP,YAAY,CAAClP,OAAO,GAAGmC,KAAK,IAAI,IAAI;IAEpC,IAAIsE,SAAS,KAAKkI,mBAAmB,CAAC3O,OAAO,CAACyG,SAAS,EACrDkI,mBAAmB,CAAC3O,OAAO,CAACyG,SAAS,GAAGA,SAAS,IAAI,EAAE;GAC1D,EAAE,CAACgI,UAAU,EAAEhI,SAAS,EAAEtE,KAAK,CAAC,CAAC;EAElC;EACAxC,oBAAoB,CAClB,MAAK;IACH,IAAI,CAAC8O,UAAU,EAAE;IAEjB,MAAMI,IAAI,GAAkCP,iBAAiB;IAC7D,IAAI,CAACL,WAAW,EAAE;MAChBY,IAAI,CAACZ,WAAW,GAAG,IAAI;IACzB,CAAC,MAAM;MACLY,IAAI,CAACZ,WAAW,GAAG,IAAInZ,MAAM,CAACC,IAAI,CAAC+Z,IAAI,CAACb,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;IACzE;IAEA,IAAI,CAACD,aAAa,EAAE;MAClBa,IAAI,CAACb,aAAa,GAAG,IAAI;IAC3B,CAAC,MAAM;MACLa,IAAI,CAACb,aAAa,GAChB,OAAOA,aAAa,KAAK,QAAQ,GAC7BA,aAAa,GACbY,kBAAkB,CAAC5O,OAAO;IAClC;IAEAyO,UAAU,CAACjO,UAAU,CAAC8N,iBAAiB,CAAC;GACzC;EAED;EACA;EACA;EACA,CAACA,iBAAiB,EAAEL,WAAW,EAAED,aAAa,CAAC,CAChD;EAED;EACAhG,oBAAoB,CAACyG,UAAU,EAAE,OAAO,EAAEL,OAAO,CAAC;EAClDpG,oBAAoB,CAACyG,UAAU,EAAE,YAAY,EAAEJ,YAAY,CAAC;EAE5D;EACA,MAAM3Y,GAAG,GAAGmS,MAAM,EAAE;EACpBhN,SAAS,CAAC,MAAK;IACb;IACA,IAAI,CAACnF,GAAG,IAAI,CAAC+Y,UAAU,IAAIP,MAAM,KAAK,IAAI,EAAE;IAE5C,MAAMiB,kBAAkB,GAAG,CAAC,CAACjB,MAAM;IACnC,MAAMkB,WAAW,GAAsC;MAAC1Z;KAAI;IAC5D,IAAIwY,MAAM,EAAE;MACVkB,WAAW,CAAClB,MAAM,GAAGA,MAAM;MAE3B;MACA,IAAIzF,gBAAgB,CAACyF,MAAM,CAAC,IAAIA,MAAM,CAACvF,OAAO,YAAY0G,OAAO,EAAE;QACjE,MAAMC,OAAO,GAAGpB,MAAM,CAACvF,OAA8B;QACrD,MAAM4G,UAAU,GAAGD,OAAO,oBAAPA,OAAO,CAAEE,qBAAqB,EAAE;QAEnD;QACA;QACA;QACA;QACA,IAAID,UAAU,IAAID,OAAO,YAAPA,OAAO,CAAEpD,cAAc,EAAE;UAAA,IAAAuD,qBAAA;UACzC;UACA;UACA,MAAMC,gBAAgB,IAAAD,qBAAA,GAAGvB,MAAM,CAACvF,OAAO,CAAC6D,iBAAiB,qBAAhCiD,qBAAA,CACrBjD,iBAA4B;UAEhC,MAAMmD,UAAU,GAAGD,gBAAgB,oBAAhBA,gBAAgB,CAAEF,qBAAqB,EAAE;UAE5D;UACA,MAAMI,aAAa,GACjBD,UAAU,CAACnM,CAAC,GACZ+L,UAAU,CAAC/L,CAAC,GACZ,CAACmM,UAAU,CAACpI,KAAK,GAAGgI,UAAU,CAAChI,KAAK,IAAI,CAAC;UAC3C,MAAMsI,aAAa,GAAGF,UAAU,CAACG,CAAC,GAAGP,UAAU,CAACO,CAAC;UAEjD,MAAMjB,IAAI,GAAkCP,iBAAiB;UAE7DO,IAAI,CAACZ,WAAW,GAAG,IAAInZ,MAAM,CAACC,IAAI,CAAC+Z,IAAI,CACrCb,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG2B,aAAa,GAAGA,aAAa,EAC5D3B,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG4B,aAAa,GAAGA,aAAa,CAC7D;UAEDpB,UAAU,CAACjO,UAAU,CAACqO,IAAI,CAAC;QAC7B;MACF;IACF;IAEA,IAAIV,WAAW,KAAKnT,SAAS,EAAE;MAC7BoU,WAAW,CAACjB,WAAW,GAAGA,WAAW;IACvC;IAEAM,UAAU,CAACsB,IAAI,CAACX,WAAW,CAAC;IAE5B,OAAO,MAAK;MACV;MACA;MACA;MACA;MACA,IAAID,kBAAkB,EAAEV,UAAU,CAACpX,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;MAEtDoX,UAAU,CAACuB,KAAK,EAAE;KACnB;EACH,CAAC,EAAE,CAACvB,UAAU,EAAEP,MAAM,EAAExY,GAAG,EAAEyY,WAAW,EAAEG,iBAAiB,EAAEL,WAAW,CAAC,CAAC;EAE1E,oBACE1V,KAAA,CAAA5B,aAAA,CAAA4B,KAAA,CAAA0X,QAAA,EACG,MAAAtB,mBAAmB,CAAC3O,OAAO,IAC1B8M,YAAY,CAAC5R,QAAQ,EAAEyT,mBAAmB,CAAC3O,OAAO,CAAC,EAEpD4O,kBAAkB,CAAC5O,OAAO,KAAK,IAAI,IAClC8M,YAAY,CAACkB,aAAa,EAAEY,kBAAkB,CAAC5O,OAAO,CAC1D,CAAG;AAEP;;ACxOA;;;AAGG;AACI,MAAMkQ,eAAe,GAAG;EAC7B3G,QAAQ,EAAE,CAAC;EACXC,UAAU,EAAE,CAAC;EACbC,GAAG,EAAE,CAAC;EACNC,SAAS,EAAE,CAAC;EACZC,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE,CAAC;EACXC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,CAAC;EACZC,KAAK,EAAE,CAAC;EACRC,YAAY,EAAE,CAAC;EACfC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,EAAE;EACjBC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,EAAE;EACV4F,wBAAwB,EAAE,EAAE;EAC5BC,yBAAyB,EAAE,EAAE;EAC7BC,sBAAsB,EAAE,EAAE;EAC1BC,yBAAyB,EAAE,EAAE;EAC7BC,wBAAwB,EAAE,EAAE;EAC5BC,sBAAsB,EAAE,EAAE;EAC1BC,sBAAsB,EAAE,EAAE;EAC1BC,uBAAuB,EAAE,EAAE;EAC3BC,oBAAoB,EAAE,EAAE;EACxBC,sBAAsB,EAAE,EAAE;EAC1BC,uBAAuB,EAAE,EAAE;EAC3BC,oBAAoB,EAAE;;AAKjB,MAAMC,UAAU,GAAGA,CAAC;EAAC7V,QAAQ;EAAEkH;AAA0B,MAAI;EAClE,MAAM4O,gBAAgB,GAAGzW,OAAO,CAAC,MAAM7D,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;EACzE,MAAMjB,GAAG,GAAGmS,MAAM,EAAE;EAEpBhN,SAAS,CAAC,MAAK;IACb,IAAI,CAACnF,GAAG,EAAE;IAEV,MAAMub,QAAQ,GAAGvb,GAAG,CAACub,QAAQ,CAAC7O,QAAQ,CAAC;IAEvC6O,QAAQ,CAACrc,IAAI,CAACoc,gBAAgB,CAAC;IAE/B,OAAO,MAAK;MACV,MAAME,aAAa,GAAGD,QAAQ,CAACE,QAAQ,EAAE;MACzC;MACA,IAAI,CAACD,aAAa,EAAE;MAEpB,MAAME,KAAK,GAAGF,aAAa,CAACzD,OAAO,CAACuD,gBAAgB,CAAC;MACrDC,QAAQ,CAACI,QAAQ,CAACD,KAAK,CAAC;KACzB;GACF,EAAE,CAACJ,gBAAgB,EAAEtb,GAAG,EAAE0M,QAAQ,CAAC,CAAC;EAErC,OAAO0K,YAAY,CAAC5R,QAAQ,EAAE8V,gBAAgB,CAAC;AACjD;;AC3CA,SAASM,SAASA,CAAC7X,KAAkB;EACnC,MAAM,CAACiP,MAAM,EAAEsC,SAAS,CAAC,GAAGpS,QAAQ,CAA4B,IAAI,CAAC;EACrE,MAAMlD,GAAG,GAAGmS,MAAM,EAAE;EAEpB,MAAM;MACJvJ,OAAO;MACPG,MAAM;MACN6M,WAAW;MACXC,SAAS;MACTgG,WAAW;MACXC;IAED,IAAG/X,KAAK;IADJgY,aAAa,GAAApY,6BAAA,CACdI,KAAK,EAAAiY,SAAA;EAET,MAAM;IAACtP,QAAQ;IAAEsJ;EAAU,IAAG+F,aAAa;EAE3C;EACA5W,SAAS,CAAC,MAAK;IACb,IAAI,CAACnF,GAAG,EAAE;MACR,IAAIA,GAAG,KAAKsF,SAAS,EACnB3F,OAAO,CAACc,KAAK,CAAC,4CAA4C,CAAC;MAE7D;IACF;IAEA,MAAM4V,SAAS,GAAG,IAAIjX,MAAM,CAACC,IAAI,CAAC4c,MAAM,CAACF,aAAa,CAAC;IACvD1F,SAAS,CAAC9H,MAAM,CAACvO,GAAG,CAAC;IACrBsV,SAAS,CAACe,SAAS,CAAC;IAEpB,OAAO,MAAK;MACVA,SAAS,CAAC9H,MAAM,CAAC,IAAI,CAAC;MACtB+G,SAAS,CAAC,IAAI,CAAC;KAChB;IACD;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACtV,GAAG,CAAC,CAAC;EAET;EACAmF,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6N,MAAM,EAAE;IAEb,MAAMuE,CAAC,GAAGvE,MAAM;IAEhB;IACA,MAAMkJ,GAAG,GAAG9c,MAAM,CAACC,IAAI,CAAC+G,KAAK;IAE7B,IAAIwC,OAAO,EAAEsT,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,OAAO,EAAE3O,OAAO,CAAC;IACjD,IAAIG,MAAM,EAAEmT,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,MAAM,EAAExO,MAAM,CAAC;IAC9C,IAAI6M,WAAW,EAAEsG,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,WAAW,EAAE3B,WAAW,CAAC;IAC7D,IAAIC,SAAS,EAAEqG,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,SAAS,EAAE1B,SAAS,CAAC;IACvD,IAAIgG,WAAW,EAAEK,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,WAAW,EAAEsE,WAAW,CAAC;IAC7D,IAAIC,UAAU,EAAEI,GAAG,CAAC7V,WAAW,CAACkR,CAAC,EAAE,UAAU,EAAEuE,UAAU,CAAC;IAE1D9I,MAAM,CAACmJ,YAAY,CAACvF,OAAO,CAACZ,SAAS,CAAC,CAAC;IAEvC,OAAO,MAAK;MACVkG,GAAG,CAAC7L,sBAAsB,CAACkH,CAAC,CAAC;KAC9B;EACH,CAAC,EAAE,CACDvE,MAAM,EACNgD,SAAS,EACTpN,OAAO,EACPG,MAAM,EACN6M,WAAW,EACXC,SAAS,EACTgG,WAAW,EACXC,UAAU,CACX,CAAC;EAEF;EACA;EACA;EACA3W,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6N,MAAM,EAAE;IACb,IAAI+I,aAAa,EAAE/I,MAAM,CAAClI,UAAU,CAACiR,aAAa,CAAC;EACrD,CAAC,EAAE,CAAC/I,MAAM,EAAE+I,aAAa,CAAC,CAAC;EAE3B;EACA5W,SAAS,CAAC,MAAK;IACb;IACA,IAAI6Q,SAAS,IAAI,CAACtJ,QAAQ,IAAI,CAACsG,MAAM,EAAE;IAEvCA,MAAM,CAACoJ,WAAW,CAAC1P,QAAQ,CAAC;GAC7B,EAAE,CAACsJ,SAAS,EAAEtJ,QAAQ,EAAEsG,MAAM,CAAC,CAAC;EAEjC,OAAOA,MAAM;AACf;AAEA;;AAEG;AACI,MAAMiJ,MAAM,GAAGhF,UAAU,CAAC,CAAClT,KAAkB,EAAEqG,GAAc,KAAI;EACtE,MAAM4I,MAAM,GAAG4I,SAAS,CAAC7X,KAAK,CAAC;EAE/BoT,mBAAmB,CAAC/M,GAAG,EAAE,MAAM4I,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;EAEhD,oBAAOnQ,KAAA,CAAA5B,aAAA,CAAA4B,KAAA,CAAA0X,QAAA,OAAK;AACd,CAAC;SAEe8B,YAAYA,CAAA;EAC1B,MAAM,CAACrJ,MAAM,EAAEsC,SAAS,CAAC,GAAGpS,QAAQ,CAA4B,IAAI,CAAC;EAErE,MAAMoU,WAAW,GAAGtS,WAAW,CAAEuS,CAA4B,IAAI;IAC/DjC,SAAS,CAACiC,CAAC,CAAC;GACb,EAAE,EAAE,CAAC;EAEN,OAAO,CAACD,WAAW,EAAEtE,MAAM,CAAU;AACvC;;ACxHA;;AAEG;AACU,MAAAsJ,GAAG,GAAIvY,KAAkC,IAAI;EAAA,IAAAiH,WAAA;EACxD,MAAMuR,cAAc,IAAAvR,WAAA,GAAGC,UAAU,CAAC0I,qBAAqB,CAAC,qBAAjC3I,WAAA,CAAmCgI,MAAM;EAChE,MAAMwJ,cAAc,GAAG3X,OAAO,CAAC,MAAM7D,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;EAEvE;EACAkE,SAAS,CAAC,MAAK;IAAA,IAAAsX,qBAAA;IACb,IAAI,CAACF,cAAc,EAAE;MACnB,IAAIA,cAAc,KAAKjX,SAAS,EAAE;QAChC3F,OAAO,CAACc,KAAK,CACX,+DAA+D,CAChE;MACH;MAEA;IACF;IAEA,IAAIsD,KAAK,CAAC2Y,KAAK,IAAI3Y,KAAK,CAACyB,QAAQ,EAAE;MACjCwM,YAAY,CACV,iHAAiH,CAClH;IACH;IAEA,IAAImE,QAAQ,CAACC,KAAK,CAACrS,KAAK,CAACyB,QAAQ,CAAC,GAAG,CAAC,EAAE;MACtCwM,YAAY,CACV,oFAAoF,CACrF;IACH;IAEA,MAAM2K,cAAc,GAAApZ,QAAA,KACfQ,KAAK,CACT;IAED,MAAM6Y,UAAU,GAAG,IAAIxd,MAAM,CAACC,IAAI,CAAC2T,MAAM,CAAC6J,UAAU,CAACF,cAAc,CAAC;IAEpE;IACA;IACA,IAAI5Y,KAAK,CAACyB,QAAQ,EAAE;MAClBoX,UAAU,CAACF,KAAK,GAAGF,cAAc;IACnC;IAEA;IACA;IACA;IACA;IACA,MAAMM,aAAa,IAAAL,qBAAA,GAAGF,cAAc,CAACtJ,OAAO,cAAAwJ,qBAAA,GAAtBA,qBAAA,CAAwBM,UAAU,KAAlC,gBAAAN,qBAAA,CAAoCM,UAAU;IAEpE,OAAOD,aAAa,YAAbA,aAAa,CAAEC,UAAU,EAAE;MAChCD,aAAa,CAACE,WAAW,CAACF,aAAa,CAACC,UAAU,CAAC;IACrD;IAEA,IAAID,aAAa,EAAE;MACjBA,aAAa,CAACpN,WAAW,CAACkN,UAAU,CAAC7F,OAAO,CAAC;IAC/C;GACD,EAAE,CAACwF,cAAc,EAAEC,cAAc,EAAEzY,KAAK,CAAC,CAAC;EAE3C,OAAOqT,YAAY,CAACrT,KAAK,CAACyB,QAAQ,EAAEgX,cAAc,CAAC;AACrD;AC3EA,MAAMS,SAAS,GAAGA,CAACnP,CAAS,EAAEoP,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEC,EAAU,KAC1ED,EAAE,GAAI,CAACtP,CAAC,GAAGoP,EAAE,KAAKG,EAAE,GAAGD,EAAE,CAAC,IAAKD,EAAE,GAAGD,EAAE,CAAC;AAEzC,MAAMI,aAAa,GAAInW,IAAY,IAAI;EACrC,IAAIA,IAAI,IAAI,EAAE,EAAE;IACd,OAAO,EAAE;EACX;EACA,IAAIA,IAAI,IAAI,IAAI,EAAE;IAChB,OAAO,IAAI;EACb;EAEA;EACA,IAAIA,IAAI,IAAI,EAAE,EAAE;IACd,OAAO8V,SAAS,CAAC9V,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACxC;EAEA;EACA,OAAO8V,SAAS,CAAC9V,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AAC5C,CAAC;AAED;;AAEG;AACH;AACO,MAAMoW,cAAc,GAAGA,CAAC;EAACnS;AAAe,MAAI;EACjD,MAAMM,KAAK,GAAGN,SAAS,CAACM,KAAK;EAC7B,MAAM8R,MAAM,GAAGpS,SAAS,CAACjE,IAAI,GAAG,CAAC;EACjC,MAAMsW,OAAO,GAAGH,aAAa,CAACE,MAAM,CAAC;EAErC,OAAAja,QAAA,KAAW6H,SAAS;IAAEsS,IAAI,EAAE,EAAE;IAAEhS,KAAK,EAAEiS,IAAI,CAACC,GAAG,CAACH,OAAO,EAAE/R,KAAK;EAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}